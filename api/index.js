Index.PACKAGES = {"ceedubs" : [], "ceedubs.irrec" : [], "ceedubs.irrec.parse" : [{"name" : "ceedubs.irrec.parse.Parser", "shortDescription" : "", "object" : "ceedubs\/irrec\/parse\/Parser$.html", "members_object" : [{"label" : "parseRegex", "tail" : "(regex: String): Either[String, Regex[Char]]", "member" : "ceedubs.irrec.parse.Parser.parseRegex", "link" : "ceedubs\/irrec\/parse\/Parser$.html#parseRegex(regex:String):Either[String,ceedubs.irrec.regex.Regex[Char]]", "kind" : "def"}, {"label" : "regexExpr", "tail" : "(arg0: P[Any]): P[Regex[Char]]", "member" : "ceedubs.irrec.parse.Parser.regexExpr", "link" : "ceedubs\/irrec\/parse\/Parser$.html#regexExpr[_](implicitevidence$23:fastparse.P[Any]):fastparse.P[ceedubs.irrec.regex.Regex[Char]]", "kind" : "def"}, {"label" : "regex", "tail" : "(arg0: P[Any]): P[Regex[Char]]", "member" : "ceedubs.irrec.parse.Parser.regex", "link" : "ceedubs\/irrec\/parse\/Parser$.html#regex[_](implicitevidence$22:fastparse.P[Any]):fastparse.P[ceedubs.irrec.regex.Regex[Char]]", "kind" : "def"}, {"label" : "term", "tail" : "(arg0: P[Any]): P[Regex[Char]]", "member" : "ceedubs.irrec.parse.Parser.term", "link" : "ceedubs\/irrec\/parse\/Parser$.html#term[_](implicitevidence$21:fastparse.P[Any]):fastparse.P[ceedubs.irrec.regex.Regex[Char]]", "kind" : "def"}, {"label" : "factor", "tail" : "(arg0: P[Any]): P[Regex[Char]]", "member" : "ceedubs.irrec.parse.Parser.factor", "link" : "ceedubs\/irrec\/parse\/Parser$.html#factor[_](implicitevidence$20:fastparse.P[Any]):fastparse.P[ceedubs.irrec.regex.Regex[Char]]", "kind" : "def"}, {"label" : "base", "tail" : "(arg0: P[Any]): P[Regex[Char]]", "member" : "ceedubs.irrec.parse.Parser.base", "link" : "ceedubs\/irrec\/parse\/Parser$.html#base[_](implicitevidence$19:fastparse.P[Any]):fastparse.P[ceedubs.irrec.regex.Regex[Char]]", "kind" : "def"}, {"label" : "charClass", "tail" : "(arg0: P[Any]): P[MatchSet[Char]]", "member" : "ceedubs.irrec.parse.Parser.charClass", "link" : "ceedubs\/irrec\/parse\/Parser$.html#charClass[_](implicitevidence$18:fastparse.P[Any]):fastparse.P[ceedubs.irrec.regex.Match.MatchSet[Char]]", "kind" : "def"}, {"label" : "charClassTerm", "tail" : "(arg0: P[Any]): P[MatchSet[Char]]", "member" : "ceedubs.irrec.parse.Parser.charClassTerm", "link" : "ceedubs\/irrec\/parse\/Parser$.html#charClassTerm[_](implicitevidence$17:fastparse.P[Any]):fastparse.P[ceedubs.irrec.regex.Match.MatchSet[Char]]", "kind" : "def"}, {"label" : "charClassUnion", "tail" : "(arg0: P[Any]): P[MatchSet[Char]]", "member" : "ceedubs.irrec.parse.Parser.charClassUnion", "link" : "ceedubs\/irrec\/parse\/Parser$.html#charClassUnion[_](implicitevidence$16:fastparse.P[Any]):fastparse.P[ceedubs.irrec.regex.Match.MatchSet[Char]]", "kind" : "def"}, {"label" : "charClassBase", "tail" : "(arg0: P[Any]): P[MatchSet[Char]]", "member" : "ceedubs.irrec.parse.Parser.charClassBase", "link" : "ceedubs\/irrec\/parse\/Parser$.html#charClassBase[_](implicitevidence$15:fastparse.P[Any]):fastparse.P[ceedubs.irrec.regex.Match.MatchSet[Char]]", "kind" : "def"}, {"label" : "positiveCharClassContent", "tail" : "(arg0: P[Any]): P[MatchSet[Char]]", "member" : "ceedubs.irrec.parse.Parser.positiveCharClassContent", "link" : "ceedubs\/irrec\/parse\/Parser$.html#positiveCharClassContent[_](implicitevidence$14:fastparse.P[Any]):fastparse.P[ceedubs.irrec.regex.Match.MatchSet[Char]]", "kind" : "def"}, {"label" : "positivePOSIXCharClass", "tail" : "(arg0: P[Any]): P[MatchSet[Char]]", "member" : "ceedubs.irrec.parse.Parser.positivePOSIXCharClass", "link" : "ceedubs\/irrec\/parse\/Parser$.html#positivePOSIXCharClass[_](implicitevidence$13:fastparse.P[Any]):fastparse.P[ceedubs.irrec.regex.Match.MatchSet[Char]]", "kind" : "def"}, {"label" : "charOrRange", "tail" : "(arg0: P[Any]): P[MatchSet[Char]]", "member" : "ceedubs.irrec.parse.Parser.charOrRange", "link" : "ceedubs\/irrec\/parse\/Parser$.html#charOrRange[_](implicitevidence$12:fastparse.P[Any]):fastparse.P[ceedubs.irrec.regex.Match.MatchSet[Char]]", "kind" : "def"}, {"label" : "matchCharRange", "tail" : "(arg0: P[Any]): P[Range[Char]]", "member" : "ceedubs.irrec.parse.Parser.matchCharRange", "link" : "ceedubs\/irrec\/parse\/Parser$.html#matchCharRange[_](implicitevidence$11:fastparse.P[Any]):fastparse.P[cats.collections.Range[Char]]", "kind" : "def"}, {"label" : "matchLitCharClassChar", "tail" : "(arg0: P[Any]): P[Literal[Char]]", "member" : "ceedubs.irrec.parse.Parser.matchLitCharClassChar", "link" : "ceedubs\/irrec\/parse\/Parser$.html#matchLitCharClassChar[_](implicitevidence$10:fastparse.P[Any]):fastparse.P[ceedubs.irrec.regex.Match.Literal[Char]]", "kind" : "def"}, {"label" : "singleLitCharClassChar", "tail" : "(arg0: P[Any]): P[Char]", "member" : "ceedubs.irrec.parse.Parser.singleLitCharClassChar", "link" : "ceedubs\/irrec\/parse\/Parser$.html#singleLitCharClassChar[_](implicitevidence$9:fastparse.P[Any]):fastparse.P[Char]", "kind" : "def"}, {"label" : "repeatCount", "tail" : "(arg0: P[Any]): P[RepeatCount]", "member" : "ceedubs.irrec.parse.Parser.repeatCount", "link" : "ceedubs\/irrec\/parse\/Parser$.html#repeatCount[_](implicitevidence$8:fastparse.P[Any]):fastparse.P[ceedubs.irrec.parse.Parser.RepeatCount]", "kind" : "def"}, {"label" : "posInt", "tail" : "(arg0: P[Any]): P[Int]", "member" : "ceedubs.irrec.parse.Parser.posInt", "link" : "ceedubs\/irrec\/parse\/Parser$.html#posInt[_](implicitevidence$7:fastparse.P[Any]):fastparse.P[Int]", "kind" : "def"}, {"label" : "wildcard", "tail" : "(arg0: P[Any]): P[Regex[Char]]", "member" : "ceedubs.irrec.parse.Parser.wildcard", "link" : "ceedubs\/irrec\/parse\/Parser$.html#wildcard[_](implicitevidence$6:fastparse.P[Any]):fastparse.P[ceedubs.irrec.regex.Regex[Char]]", "kind" : "def"}, {"label" : "charClassStandardMatchChar", "tail" : "(arg0: P[Any]): P[Char]", "member" : "ceedubs.irrec.parse.Parser.charClassStandardMatchChar", "link" : "ceedubs\/irrec\/parse\/Parser$.html#charClassStandardMatchChar[_](implicitevidence$5:fastparse.P[Any]):fastparse.P[Char]", "kind" : "def"}, {"label" : "standardMatchChar", "tail" : "(arg0: P[Any]): P[Char]", "member" : "ceedubs.irrec.parse.Parser.standardMatchChar", "link" : "ceedubs\/irrec\/parse\/Parser$.html#standardMatchChar[_](implicitevidence$4:fastparse.P[Any]):fastparse.P[Char]", "kind" : "def"}, {"label" : "shorthandClass", "tail" : "(arg0: P[Any]): P[MatchSet[Char]]", "member" : "ceedubs.irrec.parse.Parser.shorthandClass", "link" : "ceedubs\/irrec\/parse\/Parser$.html#shorthandClass[_](implicitevidence$3:fastparse.P[Any]):fastparse.P[ceedubs.irrec.regex.Match.MatchSet[Char]]", "kind" : "def"}, {"label" : "unicodeCodePoint", "tail" : "(arg0: P[Any]): P[Char]", "member" : "ceedubs.irrec.parse.Parser.unicodeCodePoint", "link" : "ceedubs\/irrec\/parse\/Parser$.html#unicodeCodePoint[_](implicitevidence$2:fastparse.P[Any]):fastparse.P[Char]", "kind" : "def"}, {"label" : "specialChar", "tail" : "(arg0: P[Any]): P[Char]", "member" : "ceedubs.irrec.parse.Parser.specialChar", "link" : "ceedubs\/irrec\/parse\/Parser$.html#specialChar[_](implicitevidence$1:fastparse.P[Any]):fastparse.P[Char]", "kind" : "def"}, {"label" : "RepeatCount", "tail" : "", "member" : "ceedubs.irrec.parse.Parser.RepeatCount", "link" : "ceedubs\/irrec\/parse\/Parser$.html#RepeatCount", "kind" : "object"}, {"label" : "RepeatCount", "tail" : "", "member" : "ceedubs.irrec.parse.Parser.RepeatCount", "link" : "ceedubs\/irrec\/parse\/Parser$.html#RepeatCountextendsProductwithSerializable", "kind" : "sealed abstract class"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ceedubs\/irrec\/parse\/Parser$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ceedubs\/irrec\/parse\/Parser$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ceedubs\/irrec\/parse\/Parser$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ceedubs\/irrec\/parse\/Parser$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ceedubs\/irrec\/parse\/Parser$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ceedubs\/irrec\/parse\/Parser$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ceedubs\/irrec\/parse\/Parser$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/parse\/Parser$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/parse\/Parser$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/parse\/Parser$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ceedubs\/irrec\/parse\/Parser$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ceedubs\/irrec\/parse\/Parser$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ceedubs\/irrec\/parse\/Parser$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ceedubs\/irrec\/parse\/Parser$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ceedubs\/irrec\/parse\/Parser$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ceedubs\/irrec\/parse\/Parser$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ceedubs\/irrec\/parse\/Parser$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ceedubs\/irrec\/parse\/Parser$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ceedubs\/irrec\/parse\/Parser$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ceedubs.irrec.parse.ParserMacros", "shortDescription" : "", "object" : "ceedubs\/irrec\/parse\/ParserMacros$.html", "members_object" : [{"label" : "parseLiteralImpl", "tail" : "(c: Context)(regex: scala.reflect.macros.blackbox.Context.Expr[String]): scala.reflect.macros.blackbox.Context.Expr[Regex[Char]]", "member" : "ceedubs.irrec.parse.ParserMacros.parseLiteralImpl", "link" : "ceedubs\/irrec\/parse\/ParserMacros$.html#parseLiteralImpl(c:scala.reflect.macros.blackbox.Context)(regex:c.Expr[String]):c.Expr[ceedubs.irrec.regex.Regex[Char]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ceedubs\/irrec\/parse\/ParserMacros$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ceedubs\/irrec\/parse\/ParserMacros$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ceedubs\/irrec\/parse\/ParserMacros$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ceedubs\/irrec\/parse\/ParserMacros$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ceedubs\/irrec\/parse\/ParserMacros$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ceedubs\/irrec\/parse\/ParserMacros$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ceedubs\/irrec\/parse\/ParserMacros$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/parse\/ParserMacros$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/parse\/ParserMacros$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/parse\/ParserMacros$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ceedubs\/irrec\/parse\/ParserMacros$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ceedubs\/irrec\/parse\/ParserMacros$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ceedubs\/irrec\/parse\/ParserMacros$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ceedubs\/irrec\/parse\/ParserMacros$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ceedubs\/irrec\/parse\/ParserMacros$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ceedubs\/irrec\/parse\/ParserMacros$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ceedubs\/irrec\/parse\/ParserMacros$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ceedubs\/irrec\/parse\/ParserMacros$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ceedubs\/irrec\/parse\/ParserMacros$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "ceedubs.irrec.regex" : [{"name" : "ceedubs.irrec.regex.CharacterClasses", "shortDescription" : "", "object" : "ceedubs\/irrec\/regex\/CharacterClasses$.html", "members_object" : [{"label" : "punctuationChar", "tail" : ": Diet[Char]", "member" : "ceedubs.irrec.regex.CharacterClasses.punctuationChar", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#punctuationChar:cats.collections.Diet[Char]", "kind" : "val"}, {"label" : "printableChar", "tail" : ": Diet[Char]", "member" : "ceedubs.irrec.regex.CharacterClasses.printableChar", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#printableChar:cats.collections.Diet[Char]", "kind" : "val"}, {"label" : "graphChar", "tail" : ": Diet[Char]", "member" : "ceedubs.irrec.regex.CharacterClasses.graphChar", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#graphChar:cats.collections.Diet[Char]", "kind" : "val"}, {"label" : "controlChar", "tail" : ": Diet[Char]", "member" : "ceedubs.irrec.regex.CharacterClasses.controlChar", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#controlChar:cats.collections.Diet[Char]", "kind" : "val"}, {"label" : "whitespaceChar", "tail" : ": Diet[Char]", "member" : "ceedubs.irrec.regex.CharacterClasses.whitespaceChar", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#whitespaceChar:cats.collections.Diet[Char]", "kind" : "val"}, {"label" : "horizontalWhitespaceChar", "tail" : ": Diet[Char]", "member" : "ceedubs.irrec.regex.CharacterClasses.horizontalWhitespaceChar", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#horizontalWhitespaceChar:cats.collections.Diet[Char]", "kind" : "val"}, {"label" : "wordChar", "tail" : ": Diet[Char]", "member" : "ceedubs.irrec.regex.CharacterClasses.wordChar", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#wordChar:cats.collections.Diet[Char]", "kind" : "val"}, {"label" : "ascii", "tail" : ": Diet[Char]", "member" : "ceedubs.irrec.regex.CharacterClasses.ascii", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#ascii:cats.collections.Diet[Char]", "kind" : "val"}, {"label" : "hexDigit", "tail" : ": Diet[Char]", "member" : "ceedubs.irrec.regex.CharacterClasses.hexDigit", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#hexDigit:cats.collections.Diet[Char]", "kind" : "val"}, {"label" : "alphaNumeric", "tail" : ": Diet[Char]", "member" : "ceedubs.irrec.regex.CharacterClasses.alphaNumeric", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#alphaNumeric:cats.collections.Diet[Char]", "kind" : "val"}, {"label" : "alpha", "tail" : ": Diet[Char]", "member" : "ceedubs.irrec.regex.CharacterClasses.alpha", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#alpha:cats.collections.Diet[Char]", "kind" : "val"}, {"label" : "upperAlpha", "tail" : ": Diet[Char]", "member" : "ceedubs.irrec.regex.CharacterClasses.upperAlpha", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#upperAlpha:cats.collections.Diet[Char]", "kind" : "val"}, {"label" : "lowerAlpha", "tail" : ": Diet[Char]", "member" : "ceedubs.irrec.regex.CharacterClasses.lowerAlpha", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#lowerAlpha:cats.collections.Diet[Char]", "kind" : "val"}, {"label" : "digit", "tail" : ": Diet[Char]", "member" : "ceedubs.irrec.regex.CharacterClasses.digit", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#digit:cats.collections.Diet[Char]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ceedubs.irrec.regex.CharRegexGen", "shortDescription" : "This providex support for generation of Char regular expressions.", "object" : "ceedubs\/irrec\/regex\/CharRegexGen$.html", "members_object" : [{"label" : "arbCharRegex", "tail" : ": Arbitrary[Regex[Char]]", "member" : "ceedubs.irrec.regex.CharRegexGen.arbCharRegex", "link" : "ceedubs\/irrec\/regex\/CharRegexGen$.html#arbCharRegex:org.scalacheck.Arbitrary[ceedubs.irrec.regex.Regex[Char]]", "kind" : "implicit val"}, {"label" : "genCharRegexAndCandidate", "tail" : ": Gen[RegexAndCandidate[Char]]", "member" : "ceedubs.irrec.regex.CharRegexGen.genCharRegexAndCandidate", "link" : "ceedubs\/irrec\/regex\/CharRegexGen$.html#genCharRegexAndCandidate:org.scalacheck.Gen[ceedubs.irrec.regex.RegexAndCandidate[Char]]", "kind" : "val"}, {"label" : "genCharRegexAndMatch", "tail" : ": Gen[RegexAndCandidate[Char]]", "member" : "ceedubs.irrec.regex.CharRegexGen.genCharRegexAndMatch", "link" : "ceedubs\/irrec\/regex\/CharRegexGen$.html#genCharRegexAndMatch:org.scalacheck.Gen[ceedubs.irrec.regex.RegexAndCandidate[Char]]", "kind" : "val"}, {"label" : "genAlphaNumCharRegexAndCandidate", "tail" : ": Gen[RegexAndCandidate[Char]]", "member" : "ceedubs.irrec.regex.CharRegexGen.genAlphaNumCharRegexAndCandidate", "link" : "ceedubs\/irrec\/regex\/CharRegexGen$.html#genAlphaNumCharRegexAndCandidate:org.scalacheck.Gen[ceedubs.irrec.regex.RegexAndCandidate[Char]]", "kind" : "val"}, {"label" : "genAlphaNumCharRegexAndMatch", "tail" : ": Gen[RegexAndCandidate[Char]]", "member" : "ceedubs.irrec.regex.CharRegexGen.genAlphaNumCharRegexAndMatch", "link" : "ceedubs\/irrec\/regex\/CharRegexGen$.html#genAlphaNumCharRegexAndMatch:org.scalacheck.Gen[ceedubs.irrec.regex.RegexAndCandidate[Char]]", "kind" : "val"}, {"label" : "genAlphaNumCharRegex", "tail" : ": Gen[Regex[Char]]", "member" : "ceedubs.irrec.regex.CharRegexGen.genAlphaNumCharRegex", "link" : "ceedubs\/irrec\/regex\/CharRegexGen$.html#genAlphaNumCharRegex:org.scalacheck.Gen[ceedubs.irrec.regex.Regex[Char]]", "kind" : "val"}, {"label" : "genStandardRegexChar", "tail" : ": Gen[Regex[Char]]", "member" : "ceedubs.irrec.regex.CharRegexGen.genStandardRegexChar", "link" : "ceedubs\/irrec\/regex\/CharRegexGen$.html#genStandardRegexChar:org.scalacheck.Gen[ceedubs.irrec.regex.Regex[Char]]", "kind" : "val"}, {"label" : "standardCharRegexGenConfig", "tail" : ": Config[Char]", "member" : "ceedubs.irrec.regex.CharRegexGen.standardCharRegexGenConfig", "link" : "ceedubs\/irrec\/regex\/CharRegexGen$.html#standardCharRegexGenConfig:ceedubs.irrec.regex.RegexGen.Config[Char]", "kind" : "val"}, {"label" : "regexMatchingStringGen", "tail" : ": (Regex[Char]) â‡’ Gen[String]", "member" : "ceedubs.irrec.regex.CharRegexGen.regexMatchingStringGen", "link" : "ceedubs\/irrec\/regex\/CharRegexGen$.html#regexMatchingStringGen:ceedubs.irrec.regex.Regex[Char]=>org.scalacheck.Gen[String]", "kind" : "val"}, {"label" : "regexMatchingStringGenFromDiet", "tail" : "(available: Diet[Char]): (Regex[Char]) â‡’ Gen[String]", "member" : "ceedubs.irrec.regex.CharRegexGen.regexMatchingStringGenFromDiet", "link" : "ceedubs\/irrec\/regex\/CharRegexGen$.html#regexMatchingStringGenFromDiet(available:cats.collections.Diet[Char]):ceedubs.irrec.regex.Regex[Char]=>org.scalacheck.Gen[String]", "kind" : "def"}, {"label" : "supportedCharacters", "tail" : ": Diet[Char]", "member" : "ceedubs.irrec.regex.CharRegexGen.supportedCharacters", "link" : "ceedubs\/irrec\/regex\/CharRegexGen$.html#supportedCharacters:cats.collections.Diet[Char]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ceedubs\/irrec\/regex\/CharRegexGen$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ceedubs\/irrec\/regex\/CharRegexGen$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ceedubs\/irrec\/regex\/CharRegexGen$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ceedubs\/irrec\/regex\/CharRegexGen$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ceedubs\/irrec\/regex\/CharRegexGen$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ceedubs\/irrec\/regex\/CharRegexGen$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ceedubs\/irrec\/regex\/CharRegexGen$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/CharRegexGen$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/CharRegexGen$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/CharRegexGen$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ceedubs\/irrec\/regex\/CharRegexGen$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ceedubs\/irrec\/regex\/CharRegexGen$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ceedubs\/irrec\/regex\/CharRegexGen$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ceedubs\/irrec\/regex\/CharRegexGen$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ceedubs\/irrec\/regex\/CharRegexGen$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ceedubs\/irrec\/regex\/CharRegexGen$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ceedubs\/irrec\/regex\/CharRegexGen$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ceedubs\/irrec\/regex\/CharRegexGen$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ceedubs\/irrec\/regex\/CharRegexGen$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ceedubs.irrec.regex.CharRegexOps", "shortDescription" : "", "members_class" : [{"label" : "pprint", "tail" : "(): String", "member" : "ceedubs.irrec.regex.CharRegexOps.pprint", "link" : "ceedubs\/irrec\/regex\/CharRegexOps.html#pprint:String", "kind" : "def"}, {"label" : "toPattern", "tail" : "(): Pattern", "member" : "ceedubs.irrec.regex.CharRegexOps.toPattern", "link" : "ceedubs\/irrec\/regex\/CharRegexOps.html#toPattern:java.util.regex.Pattern", "kind" : "def"}, {"label" : "stringMatcher", "tail" : "(): (String) â‡’ Boolean", "member" : "ceedubs.irrec.regex.CharRegexOps.stringMatcher", "link" : "ceedubs\/irrec\/regex\/CharRegexOps.html#stringMatcher:String=>Boolean", "kind" : "def"}, {"member" : "ceedubs.irrec.regex.CharRegexOps#<init>", "error" : "unsupported entity"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "ceedubs\/irrec\/regex\/CharRegexOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "ceedubs\/irrec\/regex\/CharRegexOps.html###():Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ceedubs\/irrec\/regex\/CharRegexOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ceedubs\/irrec\/regex\/CharRegexOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "ceedubs\/irrec\/regex\/CharRegexOps.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "ceedubs\/irrec\/regex\/CharRegexOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "ceedubs\/irrec\/regex\/CharRegexOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "ceedubs\/irrec\/regex\/CharRegexOps.html", "kind" : "class"}, {"name" : "ceedubs.irrec.regex.DietGen", "shortDescription" : "", "object" : "ceedubs\/irrec\/regex\/DietGen$.html", "members_object" : [{"label" : "genDiscreteDiet", "tail" : "(genA: Gen[A])(arg0: Discrete[A], arg1: Order[A]): Gen[Diet[A]]", "member" : "ceedubs.irrec.regex.DietGen.genDiscreteDiet", "link" : "ceedubs\/irrec\/regex\/DietGen$.html#genDiscreteDiet[A](genA:org.scalacheck.Gen[A])(implicitevidence$5:cats.collections.Discrete[A],implicitevidence$6:cats.kernel.Order[A]):org.scalacheck.Gen[cats.collections.Diet[A]]", "kind" : "def"}, {"label" : "genRange", "tail" : "(genA: Gen[A])(orderingA: Order[A]): Gen[Range[A]]", "member" : "ceedubs.irrec.regex.DietGen.genRange", "link" : "ceedubs\/irrec\/regex\/DietGen$.html#genRange[A](genA:org.scalacheck.Gen[A])(implicitorderingA:cats.kernel.Order[A]):org.scalacheck.Gen[cats.collections.Range[A]]", "kind" : "def"}, {"label" : "genWeightedDietRange", "tail" : "(diet: Diet[A], weight: (Range[A]) â‡’ Int): Gen[Range[A]]", "member" : "ceedubs.irrec.regex.DietGen.genWeightedDietRange", "link" : "ceedubs\/irrec\/regex\/DietGen$.html#genWeightedDietRange[A](diet:cats.collections.Diet[A],weight:cats.collections.Range[A]=>Int):org.scalacheck.Gen[cats.collections.Range[A]]", "kind" : "def"}, {"label" : "dietMatchingGen", "tail" : "(diet: Diet[A])(arg0: Choose[A]): Gen[A]", "member" : "ceedubs.irrec.regex.DietGen.dietMatchingGen", "link" : "ceedubs\/irrec\/regex\/DietGen$.html#dietMatchingGen[A](diet:cats.collections.Diet[A])(implicitevidence$4:org.scalacheck.Gen.Choose[A]):org.scalacheck.Gen[A]", "kind" : "def"}, {"label" : "weightedDietMatchingGen", "tail" : "(diet: Diet[A], weight: (Range[A]) â‡’ Int)(chooseA: Choose[A]): Gen[A]", "member" : "ceedubs.irrec.regex.DietGen.weightedDietMatchingGen", "link" : "ceedubs\/irrec\/regex\/DietGen$.html#weightedDietMatchingGen[A](diet:cats.collections.Diet[A],weight:cats.collections.Range[A]=>Int)(implicitchooseA:org.scalacheck.Gen.Choose[A]):org.scalacheck.Gen[A]", "kind" : "def"}, {"label" : "genNonEmptySubDiet", "tail" : "(diet: Diet[A], weight: (Range[A]) â‡’ Int)(arg0: Choose[A], arg1: Discrete[A], arg2: Order[A]): Gen[Diet[A]]", "member" : "ceedubs.irrec.regex.DietGen.genNonEmptySubDiet", "link" : "ceedubs\/irrec\/regex\/DietGen$.html#genNonEmptySubDiet[A](diet:cats.collections.Diet[A],weight:cats.collections.Range[A]=>Int)(implicitevidence$1:org.scalacheck.Gen.Choose[A],implicitevidence$2:cats.collections.Discrete[A],implicitevidence$3:cats.kernel.Order[A]):org.scalacheck.Gen[cats.collections.Diet[A]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ceedubs\/irrec\/regex\/DietGen$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ceedubs\/irrec\/regex\/DietGen$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ceedubs\/irrec\/regex\/DietGen$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ceedubs\/irrec\/regex\/DietGen$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ceedubs\/irrec\/regex\/DietGen$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ceedubs\/irrec\/regex\/DietGen$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ceedubs\/irrec\/regex\/DietGen$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/DietGen$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/DietGen$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/DietGen$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ceedubs\/irrec\/regex\/DietGen$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ceedubs\/irrec\/regex\/DietGen$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ceedubs\/irrec\/regex\/DietGen$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ceedubs\/irrec\/regex\/DietGen$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ceedubs\/irrec\/regex\/DietGen$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ceedubs\/irrec\/regex\/DietGen$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ceedubs\/irrec\/regex\/DietGen$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ceedubs\/irrec\/regex\/DietGen$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ceedubs\/irrec\/regex\/DietGen$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ceedubs.irrec.regex.Glushkov", "shortDescription" : "", "object" : "ceedubs\/irrec\/regex\/Glushkov$.html", "members_object" : [{"label" : "LocalLanguage", "tail" : "", "member" : "ceedubs.irrec.regex.Glushkov.LocalLanguage", "link" : "ceedubs\/irrec\/regex\/Glushkov$.html#LocalLanguage[I,A]extendsProductwithSerializable", "kind" : "final case class"}, {"label" : "localLanguageToNFA", "tail" : "(ll: LocalLanguage[Int, A]): NFA[Int, A]", "member" : "ceedubs.irrec.regex.Glushkov.localLanguageToNFA", "link" : "ceedubs\/irrec\/regex\/Glushkov$.html#localLanguageToNFA[A](ll:ceedubs.irrec.regex.Glushkov.LocalLanguage[Int,A]):ceedubs.irrec.regex.NFA[Int,A]", "kind" : "def"}, {"label" : "leafLocalLanguage", "tail" : "(index: I, a: A)(orderingI: Ordering[I]): LocalLanguage[I, A]", "member" : "ceedubs.irrec.regex.Glushkov.leafLocalLanguage", "link" : "ceedubs\/irrec\/regex\/Glushkov$.html#leafLocalLanguage[I,A](index:I,a:A)(implicitorderingI:Ordering[I]):ceedubs.irrec.regex.Glushkov.LocalLanguage[I,A]", "kind" : "def"}, {"label" : "kleeneToNFA", "tail" : "(k: Kleene[A]): NFA[Int, A]", "member" : "ceedubs.irrec.regex.Glushkov.kleeneToNFA", "link" : "ceedubs\/irrec\/regex\/Glushkov$.html#kleeneToNFA[A](k:ceedubs.irrec.regex.Kleene[A]):ceedubs.irrec.regex.NFA[Int,A]", "kind" : "def"}, {"label" : "kleeneToLocalLanguage", "tail" : "(orderingI: Ordering[I]): Algebra[[Î³$2$]CoattrF[KleeneF, (I, A), Î³$2$], LocalLanguage[I, A]]", "member" : "ceedubs.irrec.regex.Glushkov.kleeneToLocalLanguage", "link" : "ceedubs\/irrec\/regex\/Glushkov$.html#kleeneToLocalLanguage[I,A](implicitorderingI:Ordering[I]):higherkindness.droste.Algebra[[Î³$2$]higherkindness.droste.data.CoattrF[ceedubs.irrec.KleeneF,(I,A),Î³$2$],ceedubs.irrec.regex.Glushkov.LocalLanguage[I,A]]", "kind" : "def"}, {"label" : "indexLeaves", "tail" : "(arg0: Functor[F]): AlgebraM[[Î²$0$]IndexedStateT[Eval, Int, Int, Î²$0$], [Î³$1$]CoattrF[F, A, Î³$1$], Coattr[F, (Int, A)]]", "member" : "ceedubs.irrec.regex.Glushkov.indexLeaves", "link" : "ceedubs\/irrec\/regex\/Glushkov$.html#indexLeaves[F[_],A](implicitevidence$1:cats.Functor[F]):higherkindness.droste.AlgebraM[[Î²$0$]cats.data.IndexedStateT[cats.Eval,Int,Int,Î²$0$],[Î³$1$]higherkindness.droste.data.CoattrF[F,A,Î³$1$],higherkindness.droste.data.Coattr[F,(Int,A)]]", "kind" : "def"}, {"label" : "kleeneLocalLanguage", "tail" : "(orderingI: Ordering[I]): Algebra[KleeneF, LocalLanguage[I, A]]", "member" : "ceedubs.irrec.regex.Glushkov.kleeneLocalLanguage", "link" : "ceedubs\/irrec\/regex\/Glushkov$.html#kleeneLocalLanguage[I,A](implicitorderingI:Ordering[I]):higherkindness.droste.Algebra[ceedubs.irrec.KleeneF,ceedubs.irrec.regex.Glushkov.LocalLanguage[I,A]]", "kind" : "def"}, {"label" : "kleeneLocalTransitions", "tail" : "(k: KleeneF[LocalLanguage[I, A]])(orderingI: Ordering[I]): SortedMap[I, List[(I, A)]]", "member" : "ceedubs.irrec.regex.Glushkov.kleeneLocalTransitions", "link" : "ceedubs\/irrec\/regex\/Glushkov$.html#kleeneLocalTransitions[I,A](k:ceedubs.irrec.KleeneF[ceedubs.irrec.regex.Glushkov.LocalLanguage[I,A]])(implicitorderingI:Ordering[I]):scala.collection.immutable.SortedMap[I,List[(I,A)]]", "kind" : "def"}, {"label" : "kleeneLocalTrailing", "tail" : "(k: KleeneF[LocalLanguage[I, A]]): List[(I, A)]", "member" : "ceedubs.irrec.regex.Glushkov.kleeneLocalTrailing", "link" : "ceedubs\/irrec\/regex\/Glushkov$.html#kleeneLocalTrailing[I,A](k:ceedubs.irrec.KleeneF[ceedubs.irrec.regex.Glushkov.LocalLanguage[I,A]]):List[(I,A)]", "kind" : "def"}, {"label" : "kleeneLocalLeading", "tail" : "(k: KleeneF[LocalLanguage[I, A]]): List[(I, A)]", "member" : "ceedubs.irrec.regex.Glushkov.kleeneLocalLeading", "link" : "ceedubs\/irrec\/regex\/Glushkov$.html#kleeneLocalLeading[I,A](k:ceedubs.irrec.KleeneF[ceedubs.irrec.regex.Glushkov.LocalLanguage[I,A]]):List[(I,A)]", "kind" : "def"}, {"label" : "kleeneLocalIsEmpty", "tail" : "(k: KleeneF[LocalLanguage[I, A]]): Boolean", "member" : "ceedubs.irrec.regex.Glushkov.kleeneLocalIsEmpty", "link" : "ceedubs\/irrec\/regex\/Glushkov$.html#kleeneLocalIsEmpty[I,A](k:ceedubs.irrec.KleeneF[ceedubs.irrec.regex.Glushkov.LocalLanguage[I,A]]):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ceedubs\/irrec\/regex\/Glushkov$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ceedubs\/irrec\/regex\/Glushkov$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ceedubs\/irrec\/regex\/Glushkov$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ceedubs\/irrec\/regex\/Glushkov$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ceedubs\/irrec\/regex\/Glushkov$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ceedubs\/irrec\/regex\/Glushkov$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ceedubs\/irrec\/regex\/Glushkov$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/Glushkov$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/Glushkov$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/Glushkov$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ceedubs\/irrec\/regex\/Glushkov$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ceedubs\/irrec\/regex\/Glushkov$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ceedubs\/irrec\/regex\/Glushkov$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ceedubs\/irrec\/regex\/Glushkov$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ceedubs\/irrec\/regex\/Glushkov$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ceedubs\/irrec\/regex\/Glushkov$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ceedubs\/irrec\/regex\/Glushkov$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ceedubs\/irrec\/regex\/Glushkov$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ceedubs\/irrec\/regex\/Glushkov$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ceedubs.irrec.regex.KleeneOps", "shortDescription" : "", "members_class" : [{"label" : "repeat", "tail" : "(minInclusive: Int, maxInclusive: Option[Int]): Kleene[A]", "member" : "ceedubs.irrec.regex.KleeneOps.repeat", "link" : "ceedubs\/irrec\/regex\/KleeneOps.html#repeat(minInclusive:Int,maxInclusive:Option[Int]):ceedubs.irrec.regex.Kleene[A]", "kind" : "def"}, {"label" : "optional", "tail" : "(): Kleene[A]", "member" : "ceedubs.irrec.regex.KleeneOps.optional", "link" : "ceedubs\/irrec\/regex\/KleeneOps.html#optional:ceedubs.irrec.regex.Kleene[A]", "kind" : "def"}, {"label" : "count", "tail" : "(n: Int): Kleene[A]", "member" : "ceedubs.irrec.regex.KleeneOps.count", "link" : "ceedubs\/irrec\/regex\/KleeneOps.html#count(n:Int):ceedubs.irrec.regex.Kleene[A]", "kind" : "def"}, {"label" : "star", "tail" : "(): Kleene[A]", "member" : "ceedubs.irrec.regex.KleeneOps.star", "link" : "ceedubs\/irrec\/regex\/KleeneOps.html#star:ceedubs.irrec.regex.Kleene[A]", "kind" : "def"}, {"label" : "oneOrMore", "tail" : "(): Kleene[A]", "member" : "ceedubs.irrec.regex.KleeneOps.oneOrMore", "link" : "ceedubs\/irrec\/regex\/KleeneOps.html#oneOrMore:ceedubs.irrec.regex.Kleene[A]", "kind" : "def"}, {"label" : "*", "tail" : "(o: Kleene[A]): Kleene[A]", "member" : "ceedubs.irrec.regex.KleeneOps.*", "link" : "ceedubs\/irrec\/regex\/KleeneOps.html#*(o:ceedubs.irrec.regex.Kleene[A]):ceedubs.irrec.regex.Kleene[A]", "kind" : "def"}, {"label" : "|", "tail" : "(o: Kleene[A]): Kleene[A]", "member" : "ceedubs.irrec.regex.KleeneOps.|", "link" : "ceedubs\/irrec\/regex\/KleeneOps.html#|(o:ceedubs.irrec.regex.Kleene[A]):ceedubs.irrec.regex.Kleene[A]", "kind" : "def"}, {"member" : "ceedubs.irrec.regex.KleeneOps#<init>", "error" : "unsupported entity"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "ceedubs\/irrec\/regex\/KleeneOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "ceedubs\/irrec\/regex\/KleeneOps.html###():Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ceedubs\/irrec\/regex\/KleeneOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ceedubs\/irrec\/regex\/KleeneOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "ceedubs\/irrec\/regex\/KleeneOps.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "ceedubs\/irrec\/regex\/KleeneOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "ceedubs\/irrec\/regex\/KleeneOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "ceedubs\/irrec\/regex\/KleeneOps.html", "kind" : "class"}, {"name" : "ceedubs.irrec.regex.KleeneOptimization", "shortDescription" : "", "object" : "ceedubs\/irrec\/regex\/KleeneOptimization$.html", "members_object" : [{"label" : "optimizeKleene", "tail" : "(): (Kleene[A]) â‡’ Kleene[A]", "member" : "ceedubs.irrec.regex.KleeneOptimization.optimizeKleene", "link" : "ceedubs\/irrec\/regex\/KleeneOptimization$.html#optimizeKleene[A]:ceedubs.irrec.regex.Kleene[A]=>ceedubs.irrec.regex.Kleene[A]", "kind" : "def"}, {"label" : "optimizeKleeneAlgebra", "tail" : "(): Algebra[[Î³$0$]CoattrF[KleeneF, A, Î³$0$], Kleene[A]]", "member" : "ceedubs.irrec.regex.KleeneOptimization.optimizeKleeneAlgebra", "link" : "ceedubs\/irrec\/regex\/KleeneOptimization$.html#optimizeKleeneAlgebra[A]:higherkindness.droste.Algebra[[Î³$0$]higherkindness.droste.data.CoattrF[ceedubs.irrec.KleeneF,A,Î³$0$],ceedubs.irrec.regex.Kleene[A]]", "kind" : "def"}, {"label" : "partialOptimizeKleene", "tail" : "(): PartialFunction[CoattrF[KleeneF, A, Kleene[A]], Kleene[A]]", "member" : "ceedubs.irrec.regex.KleeneOptimization.partialOptimizeKleene", "link" : "ceedubs\/irrec\/regex\/KleeneOptimization$.html#partialOptimizeKleene[A]:PartialFunction[higherkindness.droste.data.CoattrF[ceedubs.irrec.KleeneF,A,ceedubs.irrec.regex.Kleene[A]],ceedubs.irrec.regex.Kleene[A]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ceedubs\/irrec\/regex\/KleeneOptimization$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ceedubs\/irrec\/regex\/KleeneOptimization$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ceedubs\/irrec\/regex\/KleeneOptimization$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ceedubs\/irrec\/regex\/KleeneOptimization$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ceedubs\/irrec\/regex\/KleeneOptimization$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ceedubs\/irrec\/regex\/KleeneOptimization$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ceedubs\/irrec\/regex\/KleeneOptimization$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/KleeneOptimization$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/KleeneOptimization$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/KleeneOptimization$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ceedubs\/irrec\/regex\/KleeneOptimization$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ceedubs\/irrec\/regex\/KleeneOptimization$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ceedubs\/irrec\/regex\/KleeneOptimization$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ceedubs\/irrec\/regex\/KleeneOptimization$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ceedubs\/irrec\/regex\/KleeneOptimization$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ceedubs\/irrec\/regex\/KleeneOptimization$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ceedubs\/irrec\/regex\/KleeneOptimization$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ceedubs\/irrec\/regex\/KleeneOptimization$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ceedubs\/irrec\/regex\/KleeneOptimization$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ceedubs.irrec.regex.Match", "shortDescription" : "", "object" : "ceedubs\/irrec\/regex\/Match$.html", "members_class" : [{"label" : "matches", "tail" : "(a: A)(orderA: Order[A]): Boolean", "member" : "ceedubs.irrec.regex.Match.matches", "link" : "ceedubs\/irrec\/regex\/Match.html#matches(a:A)(implicitorderA:cats.Order[A]):Boolean", "kind" : "def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "ceedubs\/irrec\/regex\/Match.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "ceedubs\/irrec\/regex\/Match.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ceedubs\/irrec\/regex\/Match.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ceedubs\/irrec\/regex\/Match.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ceedubs\/irrec\/regex\/Match.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ceedubs\/irrec\/regex\/Match.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ceedubs\/irrec\/regex\/Match.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ceedubs\/irrec\/regex\/Match.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ceedubs\/irrec\/regex\/Match.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/Match.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/Match.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/Match.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ceedubs\/irrec\/regex\/Match.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ceedubs\/irrec\/regex\/Match.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ceedubs\/irrec\/regex\/Match.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ceedubs\/irrec\/regex\/Match.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ceedubs\/irrec\/regex\/Match.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ceedubs\/irrec\/regex\/Match.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ceedubs\/irrec\/regex\/Match.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ceedubs\/irrec\/regex\/Match.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ceedubs\/irrec\/regex\/Match.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "ceedubs\/irrec\/regex\/Match.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "ceedubs\/irrec\/regex\/Match.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "ceedubs\/irrec\/regex\/Match.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "members_object" : [{"label" : "wildcard", "tail" : "(): Match[A]", "member" : "ceedubs.irrec.regex.Match.wildcard", "link" : "ceedubs\/irrec\/regex\/Match$.html#wildcard[A]:ceedubs.irrec.regex.Match[A]", "kind" : "def"}, {"label" : "lit", "tail" : "(a: A): Match[A]", "member" : "ceedubs.irrec.regex.Match.lit", "link" : "ceedubs\/irrec\/regex\/Match$.html#lit[A](a:A):ceedubs.irrec.regex.Match[A]", "kind" : "def"}, {"label" : "Wildcard", "tail" : "", "member" : "ceedubs.irrec.regex.Match.Wildcard", "link" : "ceedubs\/irrec\/regex\/Match$.html#Wildcard[A]extendsMatch[A]withProductwithSerializable", "kind" : "sealed case class"}, {"label" : "MatchSet", "tail" : "", "member" : "ceedubs.irrec.regex.Match.MatchSet", "link" : "ceedubs\/irrec\/regex\/Match$.html#MatchSet", "kind" : "object"}, {"label" : "MatchSet", "tail" : "", "member" : "ceedubs.irrec.regex.Match.MatchSet", "link" : "ceedubs\/irrec\/regex\/Match$.html#MatchSet[A]extendsMatch[A]", "kind" : "sealed abstract class"}, {"label" : "Literal", "tail" : "", "member" : "ceedubs.irrec.regex.Match.Literal", "link" : "ceedubs\/irrec\/regex\/Match$.html#Literal[A]extendsMatch[A]withProductwithSerializable", "kind" : "final case class"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ceedubs\/irrec\/regex\/Match$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ceedubs\/irrec\/regex\/Match$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ceedubs\/irrec\/regex\/Match$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ceedubs\/irrec\/regex\/Match$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ceedubs\/irrec\/regex\/Match$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ceedubs\/irrec\/regex\/Match$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ceedubs\/irrec\/regex\/Match$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/Match$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/Match$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/Match$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ceedubs\/irrec\/regex\/Match$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ceedubs\/irrec\/regex\/Match$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ceedubs\/irrec\/regex\/Match$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ceedubs\/irrec\/regex\/Match$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ceedubs\/irrec\/regex\/Match$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ceedubs\/irrec\/regex\/Match$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ceedubs\/irrec\/regex\/Match$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ceedubs\/irrec\/regex\/Match$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ceedubs\/irrec\/regex\/Match$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ceedubs\/irrec\/regex\/Match.html", "kind" : "class"}, {"name" : "ceedubs.irrec.regex.NFA", "shortDescription" : "", "object" : "ceedubs\/irrec\/regex\/NFA$.html", "members_object" : [{"label" : "runNFA", "tail" : "(nfa: NFA[I, B], matches: (B, A) â‡’ Boolean)(orderingI: Ordering[I], foldableF: Foldable[F]): (F[A]) â‡’ Boolean", "member" : "ceedubs.irrec.regex.NFA.runNFA", "link" : "ceedubs\/irrec\/regex\/NFA$.html#runNFA[F[_],I,B,A](nfa:ceedubs.irrec.regex.NFA[I,B],matches:(B,A)=>Boolean)(implicitorderingI:Ordering[I],implicitfoldableF:cats.Foldable[F]):F[A]=>Boolean", "kind" : "def"}, {"label" : "runNFAShortInput", "tail" : "(nfa: NFA[I, B], matches: (B, A) â‡’ Boolean)(orderingI: Ordering[I], foldableF: Foldable[F]): (F[A]) â‡’ Boolean", "member" : "ceedubs.irrec.regex.NFA.runNFAShortInput", "link" : "ceedubs\/irrec\/regex\/NFA$.html#runNFAShortInput[F[_],I,B,A](nfa:ceedubs.irrec.regex.NFA[I,B],matches:(B,A)=>Boolean)(implicitorderingI:Ordering[I],implicitfoldableF:cats.Foldable[F]):F[A]=>Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ceedubs\/irrec\/regex\/NFA$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ceedubs\/irrec\/regex\/NFA$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ceedubs\/irrec\/regex\/NFA$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ceedubs\/irrec\/regex\/NFA$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ceedubs\/irrec\/regex\/NFA$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ceedubs\/irrec\/regex\/NFA$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ceedubs\/irrec\/regex\/NFA$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/NFA$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/NFA$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/NFA$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ceedubs\/irrec\/regex\/NFA$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ceedubs\/irrec\/regex\/NFA$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ceedubs\/irrec\/regex\/NFA$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ceedubs\/irrec\/regex\/NFA$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ceedubs\/irrec\/regex\/NFA$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ceedubs\/irrec\/regex\/NFA$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ceedubs\/irrec\/regex\/NFA$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ceedubs\/irrec\/regex\/NFA$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ceedubs\/irrec\/regex\/NFA$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "ceedubs.irrec.regex.NFA#<init>", "error" : "unsupported entity"}, {"label" : "transitions", "tail" : ": SortedMap[I, List[(I, A)]]", "member" : "ceedubs.irrec.regex.NFA.transitions", "link" : "ceedubs\/irrec\/regex\/NFA.html#transitions:scala.collection.immutable.SortedMap[I,List[(I,A)]]", "kind" : "val"}, {"label" : "finalStates", "tail" : ": SortedSet[I]", "member" : "ceedubs.irrec.regex.NFA.finalStates", "link" : "ceedubs\/irrec\/regex\/NFA.html#finalStates:scala.collection.immutable.SortedSet[I]", "kind" : "val"}, {"label" : "initStates", "tail" : ": SortedSet[I]", "member" : "ceedubs.irrec.regex.NFA.initStates", "link" : "ceedubs\/irrec\/regex\/NFA.html#initStates:scala.collection.immutable.SortedSet[I]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ceedubs\/irrec\/regex\/NFA.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ceedubs\/irrec\/regex\/NFA.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ceedubs\/irrec\/regex\/NFA.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ceedubs\/irrec\/regex\/NFA.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ceedubs\/irrec\/regex\/NFA.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ceedubs\/irrec\/regex\/NFA.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ceedubs\/irrec\/regex\/NFA.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/NFA.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/NFA.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/NFA.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ceedubs\/irrec\/regex\/NFA.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ceedubs\/irrec\/regex\/NFA.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ceedubs\/irrec\/regex\/NFA.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ceedubs\/irrec\/regex\/NFA.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ceedubs\/irrec\/regex\/NFA.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ceedubs\/irrec\/regex\/NFA.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ceedubs\/irrec\/regex\/NFA.html", "kind" : "case class"}, {"name" : "ceedubs.irrec.regex.Regex", "shortDescription" : "", "object" : "ceedubs\/irrec\/regex\/Regex$.html", "members_object" : [{"label" : "stringMatcher", "tail" : "(r: Regex[Char]): (String) â‡’ Boolean", "member" : "ceedubs.irrec.regex.Regex.stringMatcher", "link" : "ceedubs\/irrec\/regex\/Regex$.html#stringMatcher(r:ceedubs.irrec.regex.Regex[Char]):String=>Boolean", "kind" : "def"}, {"label" : "matcher", "tail" : "(r: Regex[A])(orderingA: Ordering[A], foldableF: Foldable[F]): (F[A]) â‡’ Boolean", "member" : "ceedubs.irrec.regex.Regex.matcher", "link" : "ceedubs\/irrec\/regex\/Regex$.html#matcher[F[_],A](r:ceedubs.irrec.regex.Regex[A])(implicitorderingA:Ordering[A],implicitfoldableF:cats.Foldable[F]):F[A]=>Boolean", "kind" : "def"}, {"label" : "nonPunctuationChar", "tail" : ": Regex[Char]", "member" : "ceedubs.irrec.regex.Regex.nonPunctuationChar", "link" : "ceedubs\/irrec\/regex\/Regex$.html#nonPunctuationChar:ceedubs.irrec.regex.Regex[Char]", "kind" : "val"}, {"label" : "punctuationChar", "tail" : ": Regex[Char]", "member" : "ceedubs.irrec.regex.Regex.punctuationChar", "link" : "ceedubs\/irrec\/regex\/Regex$.html#punctuationChar:ceedubs.irrec.regex.Regex[Char]", "kind" : "val"}, {"label" : "nonPrintableChar", "tail" : ": Regex[Char]", "member" : "ceedubs.irrec.regex.Regex.nonPrintableChar", "link" : "ceedubs\/irrec\/regex\/Regex$.html#nonPrintableChar:ceedubs.irrec.regex.Regex[Char]", "kind" : "val"}, {"label" : "printableChar", "tail" : ": Regex[Char]", "member" : "ceedubs.irrec.regex.Regex.printableChar", "link" : "ceedubs\/irrec\/regex\/Regex$.html#printableChar:ceedubs.irrec.regex.Regex[Char]", "kind" : "val"}, {"label" : "nonGraphChar", "tail" : ": Regex[Char]", "member" : "ceedubs.irrec.regex.Regex.nonGraphChar", "link" : "ceedubs\/irrec\/regex\/Regex$.html#nonGraphChar:ceedubs.irrec.regex.Regex[Char]", "kind" : "val"}, {"label" : "graphChar", "tail" : ": Regex[Char]", "member" : "ceedubs.irrec.regex.Regex.graphChar", "link" : "ceedubs\/irrec\/regex\/Regex$.html#graphChar:ceedubs.irrec.regex.Regex[Char]", "kind" : "val"}, {"label" : "nonControlChar", "tail" : ": Regex[Char]", "member" : "ceedubs.irrec.regex.Regex.nonControlChar", "link" : "ceedubs\/irrec\/regex\/Regex$.html#nonControlChar:ceedubs.irrec.regex.Regex[Char]", "kind" : "val"}, {"label" : "controlChar", "tail" : ": Regex[Char]", "member" : "ceedubs.irrec.regex.Regex.controlChar", "link" : "ceedubs\/irrec\/regex\/Regex$.html#controlChar:ceedubs.irrec.regex.Regex[Char]", "kind" : "val"}, {"label" : "nonAsciiChar", "tail" : ": Regex[Char]", "member" : "ceedubs.irrec.regex.Regex.nonAsciiChar", "link" : "ceedubs\/irrec\/regex\/Regex$.html#nonAsciiChar:ceedubs.irrec.regex.Regex[Char]", "kind" : "val"}, {"label" : "asciiChar", "tail" : ": Regex[Char]", "member" : "ceedubs.irrec.regex.Regex.asciiChar", "link" : "ceedubs\/irrec\/regex\/Regex$.html#asciiChar:ceedubs.irrec.regex.Regex[Char]", "kind" : "val"}, {"label" : "nonWhitespaceChar", "tail" : ": Regex[Char]", "member" : "ceedubs.irrec.regex.Regex.nonWhitespaceChar", "link" : "ceedubs\/irrec\/regex\/Regex$.html#nonWhitespaceChar:ceedubs.irrec.regex.Regex[Char]", "kind" : "val"}, {"label" : "whitespaceChar", "tail" : ": Regex[Char]", "member" : "ceedubs.irrec.regex.Regex.whitespaceChar", "link" : "ceedubs\/irrec\/regex\/Regex$.html#whitespaceChar:ceedubs.irrec.regex.Regex[Char]", "kind" : "val"}, {"label" : "nonHorizontalWhitespaceChar", "tail" : ": Regex[Char]", "member" : "ceedubs.irrec.regex.Regex.nonHorizontalWhitespaceChar", "link" : "ceedubs\/irrec\/regex\/Regex$.html#nonHorizontalWhitespaceChar:ceedubs.irrec.regex.Regex[Char]", "kind" : "val"}, {"label" : "horizontalWhitespaceChar", "tail" : ": Regex[Char]", "member" : "ceedubs.irrec.regex.Regex.horizontalWhitespaceChar", "link" : "ceedubs\/irrec\/regex\/Regex$.html#horizontalWhitespaceChar:ceedubs.irrec.regex.Regex[Char]", "kind" : "val"}, {"label" : "nonWordChar", "tail" : ": Regex[Char]", "member" : "ceedubs.irrec.regex.Regex.nonWordChar", "link" : "ceedubs\/irrec\/regex\/Regex$.html#nonWordChar:ceedubs.irrec.regex.Regex[Char]", "kind" : "val"}, {"label" : "wordChar", "tail" : ": Regex[Char]", "member" : "ceedubs.irrec.regex.Regex.wordChar", "link" : "ceedubs\/irrec\/regex\/Regex$.html#wordChar:ceedubs.irrec.regex.Regex[Char]", "kind" : "val"}, {"label" : "nonHexDigitChar", "tail" : ": Regex[Char]", "member" : "ceedubs.irrec.regex.Regex.nonHexDigitChar", "link" : "ceedubs\/irrec\/regex\/Regex$.html#nonHexDigitChar:ceedubs.irrec.regex.Regex[Char]", "kind" : "val"}, {"label" : "hexDigitChar", "tail" : ": Regex[Char]", "member" : "ceedubs.irrec.regex.Regex.hexDigitChar", "link" : "ceedubs\/irrec\/regex\/Regex$.html#hexDigitChar:ceedubs.irrec.regex.Regex[Char]", "kind" : "val"}, {"label" : "nonAlphaNumericChar", "tail" : ": Regex[Char]", "member" : "ceedubs.irrec.regex.Regex.nonAlphaNumericChar", "link" : "ceedubs\/irrec\/regex\/Regex$.html#nonAlphaNumericChar:ceedubs.irrec.regex.Regex[Char]", "kind" : "val"}, {"label" : "alphaNumericChar", "tail" : ": Regex[Char]", "member" : "ceedubs.irrec.regex.Regex.alphaNumericChar", "link" : "ceedubs\/irrec\/regex\/Regex$.html#alphaNumericChar:ceedubs.irrec.regex.Regex[Char]", "kind" : "val"}, {"label" : "nonAlphaChar", "tail" : ": Regex[Char]", "member" : "ceedubs.irrec.regex.Regex.nonAlphaChar", "link" : "ceedubs\/irrec\/regex\/Regex$.html#nonAlphaChar:ceedubs.irrec.regex.Regex[Char]", "kind" : "val"}, {"label" : "alphaChar", "tail" : ": Regex[Char]", "member" : "ceedubs.irrec.regex.Regex.alphaChar", "link" : "ceedubs\/irrec\/regex\/Regex$.html#alphaChar:ceedubs.irrec.regex.Regex[Char]", "kind" : "val"}, {"label" : "nonUpperAlphaChar", "tail" : ": Regex[Char]", "member" : "ceedubs.irrec.regex.Regex.nonUpperAlphaChar", "link" : "ceedubs\/irrec\/regex\/Regex$.html#nonUpperAlphaChar:ceedubs.irrec.regex.Regex[Char]", "kind" : "val"}, {"label" : "upperAlphaChar", "tail" : ": Regex[Char]", "member" : "ceedubs.irrec.regex.Regex.upperAlphaChar", "link" : "ceedubs\/irrec\/regex\/Regex$.html#upperAlphaChar:ceedubs.irrec.regex.Regex[Char]", "kind" : "val"}, {"label" : "nonLowerAlphaChar", "tail" : ": Regex[Char]", "member" : "ceedubs.irrec.regex.Regex.nonLowerAlphaChar", "link" : "ceedubs\/irrec\/regex\/Regex$.html#nonLowerAlphaChar:ceedubs.irrec.regex.Regex[Char]", "kind" : "val"}, {"label" : "lowerAlphaChar", "tail" : ": Regex[Char]", "member" : "ceedubs.irrec.regex.Regex.lowerAlphaChar", "link" : "ceedubs\/irrec\/regex\/Regex$.html#lowerAlphaChar:ceedubs.irrec.regex.Regex[Char]", "kind" : "val"}, {"label" : "nonDigit", "tail" : ": Regex[Char]", "member" : "ceedubs.irrec.regex.Regex.nonDigit", "link" : "ceedubs\/irrec\/regex\/Regex$.html#nonDigit:ceedubs.irrec.regex.Regex[Char]", "kind" : "val"}, {"label" : "digit", "tail" : ": Regex[Char]", "member" : "ceedubs.irrec.regex.Regex.digit", "link" : "ceedubs\/irrec\/regex\/Regex$.html#digit:ceedubs.irrec.regex.Regex[Char]", "kind" : "val"}, {"label" : "count", "tail" : "(n: Int, r: Kleene[A]): Kleene[A]", "member" : "ceedubs.irrec.regex.Regex.count", "link" : "ceedubs\/irrec\/regex\/Regex$.html#count[A](n:Int,r:ceedubs.irrec.regex.Kleene[A]):ceedubs.irrec.regex.Kleene[A]", "kind" : "def"}, {"label" : "impossible", "tail" : "(): Kleene[A]", "member" : "ceedubs.irrec.regex.Regex.impossible", "link" : "ceedubs\/irrec\/regex\/Regex$.html#impossible[A]:ceedubs.irrec.regex.Kleene[A]", "kind" : "def"}, {"label" : "empty", "tail" : "(): Kleene[A]", "member" : "ceedubs.irrec.regex.Regex.empty", "link" : "ceedubs\/irrec\/regex\/Regex$.html#empty[A]:ceedubs.irrec.regex.Kleene[A]", "kind" : "def"}, {"label" : "optional", "tail" : "(r: Kleene[A]): Kleene[A]", "member" : "ceedubs.irrec.regex.Regex.optional", "link" : "ceedubs\/irrec\/regex\/Regex$.html#optional[A](r:ceedubs.irrec.regex.Kleene[A]):ceedubs.irrec.regex.Kleene[A]", "kind" : "def"}, {"label" : "repeat", "tail" : "(minInclusive: Int, maxInclusive: Option[Int], r: Kleene[A]): Kleene[A]", "member" : "ceedubs.irrec.regex.Regex.repeat", "link" : "ceedubs\/irrec\/regex\/Regex$.html#repeat[A](minInclusive:Int,maxInclusive:Option[Int],r:ceedubs.irrec.regex.Kleene[A]):ceedubs.irrec.regex.Kleene[A]", "kind" : "def"}, {"label" : "seq", "tail" : "(values: Seq[A]): Regex[A]", "member" : "ceedubs.irrec.regex.Regex.seq", "link" : "ceedubs\/irrec\/regex\/Regex$.html#seq[A](values:Seq[A]):ceedubs.irrec.regex.Regex[A]", "kind" : "def"}, {"label" : "allOf", "tail" : "(values: A*): Regex[A]", "member" : "ceedubs.irrec.regex.Regex.allOf", "link" : "ceedubs\/irrec\/regex\/Regex$.html#allOf[A](values:A*):ceedubs.irrec.regex.Regex[A]", "kind" : "def"}, {"label" : "allOfR", "tail" : "(values: Kleene[A]*): Kleene[A]", "member" : "ceedubs.irrec.regex.Regex.allOfR", "link" : "ceedubs\/irrec\/regex\/Regex$.html#allOfR[A](values:ceedubs.irrec.regex.Kleene[A]*):ceedubs.irrec.regex.Kleene[A]", "kind" : "def"}, {"label" : "allOfF", "tail" : "(values: F[A])(foldableF: Foldable[F]): Regex[A]", "member" : "ceedubs.irrec.regex.Regex.allOfF", "link" : "ceedubs\/irrec\/regex\/Regex$.html#allOfF[F[_],A](values:F[A])(implicitfoldableF:cats.Foldable[F]):ceedubs.irrec.regex.Regex[A]", "kind" : "def"}, {"label" : "allOfFR", "tail" : "(values: F[Kleene[A]])(foldableF: Foldable[F]): Kleene[A]", "member" : "ceedubs.irrec.regex.Regex.allOfFR", "link" : "ceedubs\/irrec\/regex\/Regex$.html#allOfFR[F[_],A](values:F[ceedubs.irrec.regex.Kleene[A]])(implicitfoldableF:cats.Foldable[F]):ceedubs.irrec.regex.Kleene[A]", "kind" : "def"}, {"label" : "star", "tail" : "(value: Kleene[A]): Kleene[A]", "member" : "ceedubs.irrec.regex.Regex.star", "link" : "ceedubs\/irrec\/regex\/Regex$.html#star[A](value:ceedubs.irrec.regex.Kleene[A]):ceedubs.irrec.regex.Kleene[A]", "kind" : "def"}, {"label" : "oneOrMore", "tail" : "(value: Kleene[A]): Kleene[A]", "member" : "ceedubs.irrec.regex.Regex.oneOrMore", "link" : "ceedubs\/irrec\/regex\/Regex$.html#oneOrMore[A](value:ceedubs.irrec.regex.Kleene[A]):ceedubs.irrec.regex.Kleene[A]", "kind" : "def"}, {"label" : "noneOf", "tail" : "(a1: A, as: A*)(discreteA: Discrete[A], orderA: Order[A]): Regex[A]", "member" : "ceedubs.irrec.regex.Regex.noneOf", "link" : "ceedubs\/irrec\/regex\/Regex$.html#noneOf[A](a1:A,as:A*)(implicitdiscreteA:cats.collections.Discrete[A],implicitorderA:cats.Order[A]):ceedubs.irrec.regex.Regex[A]", "kind" : "def"}, {"label" : "oneOfFR", "tail" : "(values: F[Kleene[A]])(reducibleF: Reducible[F]): Kleene[A]", "member" : "ceedubs.irrec.regex.Regex.oneOfFR", "link" : "ceedubs\/irrec\/regex\/Regex$.html#oneOfFR[F[_],A](values:F[ceedubs.irrec.regex.Kleene[A]])(implicitreducibleF:cats.Reducible[F]):ceedubs.irrec.regex.Kleene[A]", "kind" : "def"}, {"label" : "oneOfF", "tail" : "(values: F[A])(reducibleF: Reducible[F]): Regex[A]", "member" : "ceedubs.irrec.regex.Regex.oneOfF", "link" : "ceedubs\/irrec\/regex\/Regex$.html#oneOfF[F[_],A](values:F[A])(implicitreducibleF:cats.Reducible[F]):ceedubs.irrec.regex.Regex[A]", "kind" : "def"}, {"label" : "oneOfR", "tail" : "(r1: Kleene[A], rs: Kleene[A]*): Kleene[A]", "member" : "ceedubs.irrec.regex.Regex.oneOfR", "link" : "ceedubs\/irrec\/regex\/Regex$.html#oneOfR[A](r1:ceedubs.irrec.regex.Kleene[A],rs:ceedubs.irrec.regex.Kleene[A]*):ceedubs.irrec.regex.Kleene[A]", "kind" : "def"}, {"label" : "oneOf", "tail" : "(a1: A, as: A*): Regex[A]", "member" : "ceedubs.irrec.regex.Regex.oneOf", "link" : "ceedubs\/irrec\/regex\/Regex$.html#oneOf[A](a1:A,as:A*):ceedubs.irrec.regex.Regex[A]", "kind" : "def"}, {"label" : "notInSet", "tail" : "(forbidden: Diet[A]): Regex[A]", "member" : "ceedubs.irrec.regex.Regex.notInSet", "link" : "ceedubs\/irrec\/regex\/Regex$.html#notInSet[A](forbidden:cats.collections.Diet[A]):ceedubs.irrec.regex.Regex[A]", "kind" : "def"}, {"label" : "inSet", "tail" : "(allowed: Diet[A]): Regex[A]", "member" : "ceedubs.irrec.regex.Regex.inSet", "link" : "ceedubs\/irrec\/regex\/Regex$.html#inSet[A](allowed:cats.collections.Diet[A]):ceedubs.irrec.regex.Regex[A]", "kind" : "def"}, {"label" : "andThen", "tail" : "(l: Kleene[A], r: Kleene[A]): Kleene[A]", "member" : "ceedubs.irrec.regex.Regex.andThen", "link" : "ceedubs\/irrec\/regex\/Regex$.html#andThen[A](l:ceedubs.irrec.regex.Kleene[A],r:ceedubs.irrec.regex.Kleene[A]):ceedubs.irrec.regex.Kleene[A]", "kind" : "def"}, {"label" : "or", "tail" : "(l: Kleene[A], r: Kleene[A]): Kleene[A]", "member" : "ceedubs.irrec.regex.Regex.or", "link" : "ceedubs\/irrec\/regex\/Regex$.html#or[A](l:ceedubs.irrec.regex.Kleene[A],r:ceedubs.irrec.regex.Kleene[A]):ceedubs.irrec.regex.Kleene[A]", "kind" : "def"}, {"label" : "wildcard", "tail" : "(): Regex[A]", "member" : "ceedubs.irrec.regex.Regex.wildcard", "link" : "ceedubs\/irrec\/regex\/Regex$.html#wildcard[A]:ceedubs.irrec.regex.Regex[A]", "kind" : "def"}, {"label" : "range", "tail" : "(l: A, r: A): Regex[A]", "member" : "ceedubs.irrec.regex.Regex.range", "link" : "ceedubs\/irrec\/regex\/Regex$.html#range[A](l:A,r:A):ceedubs.irrec.regex.Regex[A]", "kind" : "def"}, {"label" : "literal", "tail" : "(value: A): Regex[A]", "member" : "ceedubs.irrec.regex.Regex.literal", "link" : "ceedubs\/irrec\/regex\/Regex$.html#literal[A](value:A):ceedubs.irrec.regex.Regex[A]", "kind" : "def"}, {"label" : "lit", "tail" : "(value: A): Regex[A]", "member" : "ceedubs.irrec.regex.Regex.lit", "link" : "ceedubs\/irrec\/regex\/Regex$.html#lit[A](value:A):ceedubs.irrec.regex.Regex[A]", "kind" : "def"}, {"label" : "matching", "tail" : "(m: Match[A]): Regex[A]", "member" : "ceedubs.irrec.regex.Regex.matching", "link" : "ceedubs\/irrec\/regex\/Regex$.html#matching[A](m:ceedubs.irrec.regex.Match[A]):ceedubs.irrec.regex.Regex[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ceedubs\/irrec\/regex\/Regex$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ceedubs\/irrec\/regex\/Regex$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ceedubs\/irrec\/regex\/Regex$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ceedubs\/irrec\/regex\/Regex$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ceedubs\/irrec\/regex\/Regex$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ceedubs\/irrec\/regex\/Regex$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ceedubs\/irrec\/regex\/Regex$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/Regex$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/Regex$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/Regex$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ceedubs\/irrec\/regex\/Regex$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ceedubs\/irrec\/regex\/Regex$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ceedubs\/irrec\/regex\/Regex$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ceedubs\/irrec\/regex\/Regex$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ceedubs\/irrec\/regex\/Regex$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ceedubs\/irrec\/regex\/Regex$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ceedubs\/irrec\/regex\/Regex$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ceedubs\/irrec\/regex\/Regex$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ceedubs\/irrec\/regex\/Regex$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ceedubs.irrec.regex.RegexAndCandidate", "shortDescription" : "", "object" : "ceedubs\/irrec\/regex\/RegexAndCandidate$.html", "members_object" : [{"label" : "arbRegexAndCandidateLong", "tail" : ": Arbitrary[RegexAndCandidate[Long]]", "member" : "ceedubs.irrec.regex.RegexAndCandidate.arbRegexAndCandidateLong", "link" : "ceedubs\/irrec\/regex\/RegexAndCandidate$.html#arbRegexAndCandidateLong:org.scalacheck.Arbitrary[ceedubs.irrec.regex.RegexAndCandidate[Long]]", "kind" : "implicit val"}, {"label" : "arbRegexAndCandidateInt", "tail" : ": Arbitrary[RegexAndCandidate[Int]]", "member" : "ceedubs.irrec.regex.RegexAndCandidate.arbRegexAndCandidateInt", "link" : "ceedubs\/irrec\/regex\/RegexAndCandidate$.html#arbRegexAndCandidateInt:org.scalacheck.Arbitrary[ceedubs.irrec.regex.RegexAndCandidate[Int]]", "kind" : "implicit val"}, {"label" : "arbRegexAndCandidateByte", "tail" : ": Arbitrary[RegexAndCandidate[Byte]]", "member" : "ceedubs.irrec.regex.RegexAndCandidate.arbRegexAndCandidateByte", "link" : "ceedubs\/irrec\/regex\/RegexAndCandidate$.html#arbRegexAndCandidateByte:org.scalacheck.Arbitrary[ceedubs.irrec.regex.RegexAndCandidate[Byte]]", "kind" : "implicit val"}, {"label" : "arbRegexAndCandidateChar", "tail" : ": Arbitrary[RegexAndCandidate[Char]]", "member" : "ceedubs.irrec.regex.RegexAndCandidate.arbRegexAndCandidateChar", "link" : "ceedubs\/irrec\/regex\/RegexAndCandidate$.html#arbRegexAndCandidateChar:org.scalacheck.Arbitrary[ceedubs.irrec.regex.RegexAndCandidate[Char]]", "kind" : "implicit val"}, {"label" : "genLongRegexAndMatch", "tail" : ": Gen[RegexAndCandidate[Long]]", "member" : "ceedubs.irrec.regex.RegexAndCandidate.genLongRegexAndMatch", "link" : "ceedubs\/irrec\/regex\/RegexAndCandidate$.html#genLongRegexAndMatch:org.scalacheck.Gen[ceedubs.irrec.regex.RegexAndCandidate[Long]]", "kind" : "val"}, {"label" : "genIntRegexAndMatch", "tail" : ": Gen[RegexAndCandidate[Int]]", "member" : "ceedubs.irrec.regex.RegexAndCandidate.genIntRegexAndMatch", "link" : "ceedubs\/irrec\/regex\/RegexAndCandidate$.html#genIntRegexAndMatch:org.scalacheck.Gen[ceedubs.irrec.regex.RegexAndCandidate[Int]]", "kind" : "val"}, {"label" : "genByteRegexAndMatch", "tail" : ": Gen[RegexAndCandidate[Byte]]", "member" : "ceedubs.irrec.regex.RegexAndCandidate.genByteRegexAndMatch", "link" : "ceedubs\/irrec\/regex\/RegexAndCandidate$.html#genByteRegexAndMatch:org.scalacheck.Gen[ceedubs.irrec.regex.RegexAndCandidate[Byte]]", "kind" : "val"}, {"label" : "genRegexAndCandidate", "tail" : "(cfg: Config[A], matchToGen: (Match[A]) â‡’ Gen[A]): Gen[RegexAndCandidate[A]]", "member" : "ceedubs.irrec.regex.RegexAndCandidate.genRegexAndCandidate", "link" : "ceedubs\/irrec\/regex\/RegexAndCandidate$.html#genRegexAndCandidate[A](cfg:ceedubs.irrec.regex.RegexGen.Config[A],matchToGen:ceedubs.irrec.regex.Match[A]=>org.scalacheck.Gen[A]):org.scalacheck.Gen[ceedubs.irrec.regex.RegexAndCandidate[A]]", "kind" : "def"}, {"label" : "genRegexAndMatch", "tail" : "(cfg: Config[A], matchToGen: (Match[A]) â‡’ Gen[A]): Gen[RegexAndCandidate[A]]", "member" : "ceedubs.irrec.regex.RegexAndCandidate.genRegexAndMatch", "link" : "ceedubs\/irrec\/regex\/RegexAndCandidate$.html#genRegexAndMatch[A](cfg:ceedubs.irrec.regex.RegexGen.Config[A],matchToGen:ceedubs.irrec.regex.Match[A]=>org.scalacheck.Gen[A]):org.scalacheck.Gen[ceedubs.irrec.regex.RegexAndCandidate[A]]", "kind" : "def"}, {"label" : "genCandidateStream", "tail" : "(matchToGen: (Match[A]) â‡’ Gen[A]): (Regex[A]) â‡’ Gen[Stream[A]]", "member" : "ceedubs.irrec.regex.RegexAndCandidate.genCandidateStream", "link" : "ceedubs\/irrec\/regex\/RegexAndCandidate$.html#genCandidateStream[A](matchToGen:ceedubs.irrec.regex.Match[A]=>org.scalacheck.Gen[A]):ceedubs.irrec.regex.Regex[A]=>org.scalacheck.Gen[Stream[A]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ceedubs\/irrec\/regex\/RegexAndCandidate$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ceedubs\/irrec\/regex\/RegexAndCandidate$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ceedubs\/irrec\/regex\/RegexAndCandidate$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ceedubs\/irrec\/regex\/RegexAndCandidate$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ceedubs\/irrec\/regex\/RegexAndCandidate$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ceedubs\/irrec\/regex\/RegexAndCandidate$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ceedubs\/irrec\/regex\/RegexAndCandidate$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/RegexAndCandidate$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/RegexAndCandidate$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/RegexAndCandidate$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ceedubs\/irrec\/regex\/RegexAndCandidate$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ceedubs\/irrec\/regex\/RegexAndCandidate$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ceedubs\/irrec\/regex\/RegexAndCandidate$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ceedubs\/irrec\/regex\/RegexAndCandidate$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ceedubs\/irrec\/regex\/RegexAndCandidate$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ceedubs\/irrec\/regex\/RegexAndCandidate$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ceedubs\/irrec\/regex\/RegexAndCandidate$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ceedubs\/irrec\/regex\/RegexAndCandidate$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ceedubs\/irrec\/regex\/RegexAndCandidate$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "ceedubs.irrec.regex.RegexAndCandidate#<init>", "error" : "unsupported entity"}, {"label" : "candidate", "tail" : ": Stream[A]", "member" : "ceedubs.irrec.regex.RegexAndCandidate.candidate", "link" : "ceedubs\/irrec\/regex\/RegexAndCandidate.html#candidate:Stream[A]", "kind" : "val"}, {"label" : "r", "tail" : ": Regex[A]", "member" : "ceedubs.irrec.regex.RegexAndCandidate.r", "link" : "ceedubs\/irrec\/regex\/RegexAndCandidate.html#r:ceedubs.irrec.regex.Regex[A]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ceedubs\/irrec\/regex\/RegexAndCandidate.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ceedubs\/irrec\/regex\/RegexAndCandidate.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ceedubs\/irrec\/regex\/RegexAndCandidate.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ceedubs\/irrec\/regex\/RegexAndCandidate.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ceedubs\/irrec\/regex\/RegexAndCandidate.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ceedubs\/irrec\/regex\/RegexAndCandidate.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ceedubs\/irrec\/regex\/RegexAndCandidate.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/RegexAndCandidate.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/RegexAndCandidate.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/RegexAndCandidate.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ceedubs\/irrec\/regex\/RegexAndCandidate.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ceedubs\/irrec\/regex\/RegexAndCandidate.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ceedubs\/irrec\/regex\/RegexAndCandidate.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ceedubs\/irrec\/regex\/RegexAndCandidate.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ceedubs\/irrec\/regex\/RegexAndCandidate.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ceedubs\/irrec\/regex\/RegexAndCandidate.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ceedubs\/irrec\/regex\/RegexAndCandidate.html", "kind" : "case class"}, {"name" : "ceedubs.irrec.regex.RegexGen", "shortDescription" : "", "object" : "ceedubs\/irrec\/regex\/RegexGen$.html", "members_object" : [{"label" : "arbLongRegex", "tail" : ": Arbitrary[Regex[Long]]", "member" : "ceedubs.irrec.regex.RegexGen.arbLongRegex", "link" : "ceedubs\/irrec\/regex\/RegexGen$.html#arbLongRegex:org.scalacheck.Arbitrary[ceedubs.irrec.regex.Regex[Long]]", "kind" : "implicit val"}, {"label" : "genLongRegex", "tail" : ": Gen[Regex[Long]]", "member" : "ceedubs.irrec.regex.RegexGen.genLongRegex", "link" : "ceedubs\/irrec\/regex\/RegexGen$.html#genLongRegex:org.scalacheck.Gen[ceedubs.irrec.regex.Regex[Long]]", "kind" : "val"}, {"label" : "arbIntRegex", "tail" : ": Arbitrary[Regex[Int]]", "member" : "ceedubs.irrec.regex.RegexGen.arbIntRegex", "link" : "ceedubs\/irrec\/regex\/RegexGen$.html#arbIntRegex:org.scalacheck.Arbitrary[ceedubs.irrec.regex.Regex[Int]]", "kind" : "implicit val"}, {"label" : "genIntRegex", "tail" : ": Gen[Regex[Int]]", "member" : "ceedubs.irrec.regex.RegexGen.genIntRegex", "link" : "ceedubs\/irrec\/regex\/RegexGen$.html#genIntRegex:org.scalacheck.Gen[ceedubs.irrec.regex.Regex[Int]]", "kind" : "val"}, {"label" : "arbByteRegex", "tail" : ": Arbitrary[Regex[Byte]]", "member" : "ceedubs.irrec.regex.RegexGen.arbByteRegex", "link" : "ceedubs\/irrec\/regex\/RegexGen$.html#arbByteRegex:org.scalacheck.Arbitrary[ceedubs.irrec.regex.Regex[Byte]]", "kind" : "implicit val"}, {"label" : "genByteRegex", "tail" : ": Gen[Regex[Byte]]", "member" : "ceedubs.irrec.regex.RegexGen.genByteRegex", "link" : "ceedubs\/irrec\/regex\/RegexGen$.html#genByteRegex:org.scalacheck.Gen[ceedubs.irrec.regex.Regex[Byte]]", "kind" : "val"}, {"label" : "standardLongConfig", "tail" : ": Config[Long]", "member" : "ceedubs.irrec.regex.RegexGen.standardLongConfig", "link" : "ceedubs\/irrec\/regex\/RegexGen$.html#standardLongConfig:ceedubs.irrec.regex.RegexGen.Config[Long]", "kind" : "val"}, {"label" : "standardIntConfig", "tail" : ": Config[Int]", "member" : "ceedubs.irrec.regex.RegexGen.standardIntConfig", "link" : "ceedubs\/irrec\/regex\/RegexGen$.html#standardIntConfig:ceedubs.irrec.regex.RegexGen.Config[Int]", "kind" : "val"}, {"label" : "standardByteConfig", "tail" : ": Config[Byte]", "member" : "ceedubs.irrec.regex.RegexGen.standardByteConfig", "link" : "ceedubs\/irrec\/regex\/RegexGen$.html#standardByteConfig:ceedubs.irrec.regex.RegexGen.Config[Byte]", "kind" : "val"}, {"label" : "genRegex", "tail" : "(cfg: Config[A]): Gen[Regex[A]]", "member" : "ceedubs.irrec.regex.RegexGen.genRegex", "link" : "ceedubs\/irrec\/regex\/RegexGen$.html#genRegex[A](cfg:ceedubs.irrec.regex.RegexGen.Config[A]):org.scalacheck.Gen[ceedubs.irrec.regex.Regex[A]]", "kind" : "def"}, {"label" : "genRegexCoalgebraM", "tail" : "(cfg: Config[A]): CoalgebraM[Gen, [Î³$0$]CoattrF[KleeneF, Match[A], Î³$0$], Int]", "member" : "ceedubs.irrec.regex.RegexGen.genRegexCoalgebraM", "link" : "ceedubs\/irrec\/regex\/RegexGen$.html#genRegexCoalgebraM[A](cfg:ceedubs.irrec.regex.RegexGen.Config[A]):higherkindness.droste.CoalgebraM[org.scalacheck.Gen,[Î³$0$]higherkindness.droste.data.CoattrF[ceedubs.irrec.KleeneF,ceedubs.irrec.regex.Match[A],Î³$0$],Int]", "kind" : "def"}, {"label" : "genMatch", "tail" : "(genA: Gen[A], genDietA: Gen[Diet[A]])(arg0: Discrete[A], arg1: Order[A]): Gen[Match[A]]", "member" : "ceedubs.irrec.regex.RegexGen.genMatch", "link" : "ceedubs\/irrec\/regex\/RegexGen$.html#genMatch[A](genA:org.scalacheck.Gen[A],genDietA:org.scalacheck.Gen[cats.collections.Diet[A]])(implicitevidence$4:cats.collections.Discrete[A],implicitevidence$5:cats.Order[A]):org.scalacheck.Gen[ceedubs.irrec.regex.Match[A]]", "kind" : "def"}, {"label" : "Config", "tail" : "", "member" : "ceedubs.irrec.regex.RegexGen.Config", "link" : "ceedubs\/irrec\/regex\/RegexGen$.html#Config", "kind" : "object"}, {"label" : "Config", "tail" : "", "member" : "ceedubs.irrec.regex.RegexGen.Config", "link" : "ceedubs\/irrec\/regex\/RegexGen$.html#Config[A]extendsAnyRef", "kind" : "final class"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ceedubs\/irrec\/regex\/RegexGen$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ceedubs\/irrec\/regex\/RegexGen$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ceedubs\/irrec\/regex\/RegexGen$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ceedubs\/irrec\/regex\/RegexGen$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ceedubs\/irrec\/regex\/RegexGen$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ceedubs\/irrec\/regex\/RegexGen$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ceedubs\/irrec\/regex\/RegexGen$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/RegexGen$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/RegexGen$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/RegexGen$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ceedubs\/irrec\/regex\/RegexGen$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ceedubs\/irrec\/regex\/RegexGen$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ceedubs\/irrec\/regex\/RegexGen$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ceedubs\/irrec\/regex\/RegexGen$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ceedubs\/irrec\/regex\/RegexGen$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ceedubs\/irrec\/regex\/RegexGen$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ceedubs\/irrec\/regex\/RegexGen$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ceedubs\/irrec\/regex\/RegexGen$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ceedubs\/irrec\/regex\/RegexGen$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ceedubs.irrec.regex.RegexMatchGen", "shortDescription" : "", "object" : "ceedubs\/irrec\/regex\/RegexMatchGen$.html", "members_object" : [{"label" : "dietRegexMatchingStreamGen", "tail" : "(available: Diet[A])(arg0: Choose[A], arg1: Discrete[A], arg2: Order[A]): (Regex[A]) â‡’ Gen[Stream[A]]", "member" : "ceedubs.irrec.regex.RegexMatchGen.dietRegexMatchingStreamGen", "link" : "ceedubs\/irrec\/regex\/RegexMatchGen$.html#dietRegexMatchingStreamGen[A](available:cats.collections.Diet[A])(implicitevidence$1:org.scalacheck.Gen.Choose[A],implicitevidence$2:cats.collections.Discrete[A],implicitevidence$3:cats.Order[A]):ceedubs.irrec.regex.Regex[A]=>org.scalacheck.Gen[Stream[A]]", "kind" : "def"}, {"label" : "regexMatchingStreamGen", "tail" : "(matchToGen: (Match[A]) â‡’ Gen[A]): (Regex[A]) â‡’ Gen[Stream[A]]", "member" : "ceedubs.irrec.regex.RegexMatchGen.regexMatchingStreamGen", "link" : "ceedubs\/irrec\/regex\/RegexMatchGen$.html#regexMatchingStreamGen[A](matchToGen:ceedubs.irrec.regex.Match[A]=>org.scalacheck.Gen[A]):ceedubs.irrec.regex.Regex[A]=>org.scalacheck.Gen[Stream[A]]", "kind" : "def"}, {"label" : "dietMatchToGen", "tail" : "(available: Diet[A], dietToGen: (Diet[A]) â‡’ Gen[A])(orderA: Order[A], discreteA: Discrete[A]): (Match[A]) â‡’ Gen[A]", "member" : "ceedubs.irrec.regex.RegexMatchGen.dietMatchToGen", "link" : "ceedubs\/irrec\/regex\/RegexMatchGen$.html#dietMatchToGen[A](available:cats.collections.Diet[A],dietToGen:cats.collections.Diet[A]=>org.scalacheck.Gen[A])(implicitorderA:cats.Order[A],implicitdiscreteA:cats.collections.Discrete[A]):ceedubs.irrec.regex.Match[A]=>org.scalacheck.Gen[A]", "kind" : "def"}, {"label" : "regexMatchingStreamAlgebra", "tail" : "(matchGen: (Match[A]) â‡’ Gen[A]): Algebra[[Î³$0$]CoattrF[KleeneF, Match[A], Î³$0$], Weighted[Gen[Stream[A]]]]", "member" : "ceedubs.irrec.regex.RegexMatchGen.regexMatchingStreamAlgebra", "link" : "ceedubs\/irrec\/regex\/RegexMatchGen$.html#regexMatchingStreamAlgebra[A](matchGen:ceedubs.irrec.regex.Match[A]=>org.scalacheck.Gen[A]):higherkindness.droste.Algebra[[Î³$0$]higherkindness.droste.data.CoattrF[ceedubs.irrec.KleeneF,ceedubs.irrec.regex.Match[A],Î³$0$],ceedubs.irrec.regex.RegexMatchGen.Weighted[org.scalacheck.Gen[Stream[A]]]]", "kind" : "def"}, {"label" : "kleeneFStreamAlgebra", "tail" : "(): Algebra[KleeneF, Weighted[Gen[Stream[A]]]]", "member" : "ceedubs.irrec.regex.RegexMatchGen.kleeneFStreamAlgebra", "link" : "ceedubs\/irrec\/regex\/RegexMatchGen$.html#kleeneFStreamAlgebra[A]:higherkindness.droste.Algebra[ceedubs.irrec.KleeneF,ceedubs.irrec.regex.RegexMatchGen.Weighted[org.scalacheck.Gen[Stream[A]]]]", "kind" : "def"}, {"label" : "Weighted", "tail" : "", "member" : "ceedubs.irrec.regex.RegexMatchGen.Weighted", "link" : "ceedubs\/irrec\/regex\/RegexMatchGen$.html#Weighted[A]extendsProductwithSerializable", "kind" : "final case class"}, {"label" : "longMatchingGen", "tail" : ": (Match[Long]) â‡’ Gen[Long]", "member" : "ceedubs.irrec.regex.RegexMatchGen.longMatchingGen", "link" : "ceedubs\/irrec\/regex\/RegexMatchGen$.html#longMatchingGen:ceedubs.irrec.regex.Match[Long]=>org.scalacheck.Gen[Long]", "kind" : "val"}, {"label" : "intMatchingGen", "tail" : ": (Match[Int]) â‡’ Gen[Int]", "member" : "ceedubs.irrec.regex.RegexMatchGen.intMatchingGen", "link" : "ceedubs\/irrec\/regex\/RegexMatchGen$.html#intMatchingGen:ceedubs.irrec.regex.Match[Int]=>org.scalacheck.Gen[Int]", "kind" : "val"}, {"label" : "byteMatchingGen", "tail" : ": (Match[Byte]) â‡’ Gen[Byte]", "member" : "ceedubs.irrec.regex.RegexMatchGen.byteMatchingGen", "link" : "ceedubs\/irrec\/regex\/RegexMatchGen$.html#byteMatchingGen:ceedubs.irrec.regex.Match[Byte]=>org.scalacheck.Gen[Byte]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ceedubs\/irrec\/regex\/RegexMatchGen$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ceedubs\/irrec\/regex\/RegexMatchGen$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ceedubs\/irrec\/regex\/RegexMatchGen$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ceedubs\/irrec\/regex\/RegexMatchGen$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ceedubs\/irrec\/regex\/RegexMatchGen$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ceedubs\/irrec\/regex\/RegexMatchGen$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ceedubs\/irrec\/regex\/RegexMatchGen$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/RegexMatchGen$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/RegexMatchGen$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/RegexMatchGen$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ceedubs\/irrec\/regex\/RegexMatchGen$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ceedubs\/irrec\/regex\/RegexMatchGen$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ceedubs\/irrec\/regex\/RegexMatchGen$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ceedubs\/irrec\/regex\/RegexMatchGen$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ceedubs\/irrec\/regex\/RegexMatchGen$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ceedubs\/irrec\/regex\/RegexMatchGen$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ceedubs\/irrec\/regex\/RegexMatchGen$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ceedubs\/irrec\/regex\/RegexMatchGen$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ceedubs\/irrec\/regex\/RegexMatchGen$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ceedubs.irrec.regex.RegexOps", "shortDescription" : "", "members_class" : [{"label" : "optimize", "tail" : "(discreteA: Discrete[A], orderA: Order[A]): Regex[A]", "member" : "ceedubs.irrec.regex.RegexOps.optimize", "link" : "ceedubs\/irrec\/regex\/RegexOps.html#optimize(implicitdiscreteA:cats.collections.Discrete[A],implicitorderA:cats.Order[A]):ceedubs.irrec.regex.Regex[A]", "kind" : "def"}, {"label" : "matcher", "tail" : "(orderingA: Ordering[A], foldableF: Foldable[F]): (F[A]) â‡’ Boolean", "member" : "ceedubs.irrec.regex.RegexOps.matcher", "link" : "ceedubs\/irrec\/regex\/RegexOps.html#matcher[F[_]](implicitorderingA:Ordering[A],implicitfoldableF:cats.Foldable[F]):F[A]=>Boolean", "kind" : "def"}, {"member" : "ceedubs.irrec.regex.RegexOps#<init>", "error" : "unsupported entity"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "ceedubs\/irrec\/regex\/RegexOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "ceedubs\/irrec\/regex\/RegexOps.html###():Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ceedubs\/irrec\/regex\/RegexOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ceedubs\/irrec\/regex\/RegexOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "ceedubs\/irrec\/regex\/RegexOps.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "ceedubs\/irrec\/regex\/RegexOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "ceedubs\/irrec\/regex\/RegexOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "ceedubs\/irrec\/regex\/RegexOps.html", "kind" : "class"}, {"name" : "ceedubs.irrec.regex.RegexOptimization", "shortDescription" : "", "object" : "ceedubs\/irrec\/regex\/RegexOptimization$.html", "members_object" : [{"label" : "optimizeRegex", "tail" : "(arg0: Discrete[A], arg1: Order[A]): (Regex[A]) â‡’ Regex[A]", "member" : "ceedubs.irrec.regex.RegexOptimization.optimizeRegex", "link" : "ceedubs\/irrec\/regex\/RegexOptimization$.html#optimizeRegex[A](implicitevidence$5:cats.collections.Discrete[A],implicitevidence$6:cats.kernel.Order[A]):ceedubs.irrec.regex.Regex[A]=>ceedubs.irrec.regex.Regex[A]", "kind" : "def"}, {"label" : "optimizeRegexAlgebra", "tail" : "(arg0: Discrete[A], arg1: Order[A]): Algebra[[Î³$0$]CoattrF[KleeneF, Match[A], Î³$0$], Regex[A]]", "member" : "ceedubs.irrec.regex.RegexOptimization.optimizeRegexAlgebra", "link" : "ceedubs\/irrec\/regex\/RegexOptimization$.html#optimizeRegexAlgebra[A](implicitevidence$3:cats.collections.Discrete[A],implicitevidence$4:cats.kernel.Order[A]):higherkindness.droste.Algebra[[Î³$0$]higherkindness.droste.data.CoattrF[ceedubs.irrec.KleeneF,ceedubs.irrec.regex.Match[A],Î³$0$],ceedubs.irrec.regex.Regex[A]]", "kind" : "def"}, {"label" : "partialOptimizeRegex", "tail" : "(arg0: Discrete[A], arg1: Order[A]): PartialFunction[CoattrF[KleeneF, Match[A], Regex[A]], Regex[A]]", "member" : "ceedubs.irrec.regex.RegexOptimization.partialOptimizeRegex", "link" : "ceedubs\/irrec\/regex\/RegexOptimization$.html#partialOptimizeRegex[A](implicitevidence$1:cats.collections.Discrete[A],implicitevidence$2:cats.kernel.Order[A]):PartialFunction[higherkindness.droste.data.CoattrF[ceedubs.irrec.KleeneF,ceedubs.irrec.regex.Match[A],ceedubs.irrec.regex.Regex[A]],ceedubs.irrec.regex.Regex[A]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ceedubs\/irrec\/regex\/RegexOptimization$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ceedubs\/irrec\/regex\/RegexOptimization$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ceedubs\/irrec\/regex\/RegexOptimization$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ceedubs\/irrec\/regex\/RegexOptimization$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ceedubs\/irrec\/regex\/RegexOptimization$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ceedubs\/irrec\/regex\/RegexOptimization$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ceedubs\/irrec\/regex\/RegexOptimization$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/RegexOptimization$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/RegexOptimization$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/RegexOptimization$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ceedubs\/irrec\/regex\/RegexOptimization$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ceedubs\/irrec\/regex\/RegexOptimization$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ceedubs\/irrec\/regex\/RegexOptimization$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ceedubs\/irrec\/regex\/RegexOptimization$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ceedubs\/irrec\/regex\/RegexOptimization$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ceedubs\/irrec\/regex\/RegexOptimization$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ceedubs\/irrec\/regex\/RegexOptimization$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ceedubs\/irrec\/regex\/RegexOptimization$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ceedubs\/irrec\/regex\/RegexOptimization$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ceedubs.irrec.regex.RegexPrettyPrinter", "shortDescription" : "", "object" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html", "members_object" : [{"label" : "pprintCharRegex", "tail" : "(r: Regex[Char]): String", "member" : "ceedubs.irrec.regex.RegexPrettyPrinter.pprintCharRegex", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#pprintCharRegex(r:ceedubs.irrec.regex.Regex[Char]):String", "kind" : "def"}, {"label" : "pprintCharAlgebra", "tail" : "(): RAlgebra[Int, [Î³$1$]CoattrF[KleeneF, Match[Char], Î³$1$], String]", "member" : "ceedubs.irrec.regex.RegexPrettyPrinter.pprintCharAlgebra", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#pprintCharAlgebra:higherkindness.droste.RAlgebra[Int,[Î³$1$]higherkindness.droste.data.CoattrF[ceedubs.irrec.KleeneF,ceedubs.irrec.regex.Match[Char],Î³$1$],String]", "kind" : "def"}, {"label" : "showCharMatch", "tail" : "(): (Match[Char]) â‡’ String", "member" : "ceedubs.irrec.regex.RegexPrettyPrinter.showCharMatch", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#showCharMatch:ceedubs.irrec.regex.Match[Char]=>String", "kind" : "def"}, {"label" : "showMatch", "tail" : "(f: (Boolean, A) â‡’ String)(eqA: Eq[A]): (Match[A]) â‡’ String", "member" : "ceedubs.irrec.regex.RegexPrettyPrinter.showMatch", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#showMatch[A](f:(Boolean,A)=>String)(impliciteqA:cats.Eq[A]):ceedubs.irrec.regex.Match[A]=>String", "kind" : "def"}, {"label" : "pprintKleene", "tail" : "(): RAlgebra[Int, KleeneF, String]", "member" : "ceedubs.irrec.regex.RegexPrettyPrinter.pprintKleene", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#pprintKleene[A]:higherkindness.droste.RAlgebra[Int,ceedubs.irrec.KleeneF,String]", "kind" : "def"}, {"label" : "parensMaybe", "tail" : "(currentPrecedence: Int, value: (Int, String), parensForEqualPrecedence: Boolean): String", "member" : "ceedubs.irrec.regex.RegexPrettyPrinter.parensMaybe", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#parensMaybe(currentPrecedence:Int,value:(Int,String),parensForEqualPrecedence:Boolean):String", "kind" : "def"}, {"label" : "showChar", "tail" : "(inCharacterClass: Boolean): (Char) â‡’ String", "member" : "ceedubs.irrec.regex.RegexPrettyPrinter.showChar", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#showChar(inCharacterClass:Boolean):Char=>String", "kind" : "def"}, {"label" : "nonGraphicalToUnicode", "tail" : "(c: Char): String", "member" : "ceedubs.irrec.regex.RegexPrettyPrinter.nonGraphicalToUnicode", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#nonGraphicalToUnicode(c:Char):String", "kind" : "def"}, {"label" : "charClassCharToEscapedChar", "tail" : ": Map[Char, String]", "member" : "ceedubs.irrec.regex.RegexPrettyPrinter.charClassCharToEscapedChar", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#charClassCharToEscapedChar:Map[Char,String]", "kind" : "val"}, {"label" : "nonCharClassCharToEscapedChar", "tail" : ": Map[Char, String]", "member" : "ceedubs.irrec.regex.RegexPrettyPrinter.nonCharClassCharToEscapedChar", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#nonCharClassCharToEscapedChar:Map[Char,String]", "kind" : "val"}, {"label" : "specialCharClassCharToLit", "tail" : ": Map[Char, Char]", "member" : "ceedubs.irrec.regex.RegexPrettyPrinter.specialCharClassCharToLit", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#specialCharClassCharToLit:Map[Char,Char]", "kind" : "val"}, {"label" : "specialNonCharClassCharToLit", "tail" : ": Map[Char, Char]", "member" : "ceedubs.irrec.regex.RegexPrettyPrinter.specialNonCharClassCharToLit", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#specialNonCharClassCharToLit:Map[Char,Char]", "kind" : "val"}, {"label" : "whitespaceCharMappings", "tail" : ": Map[Char, Char]", "member" : "ceedubs.irrec.regex.RegexPrettyPrinter.whitespaceCharMappings", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#whitespaceCharMappings:Map[Char,Char]", "kind" : "val"}, {"label" : "charClassCharsToEscape", "tail" : ": Set[Char]", "member" : "ceedubs.irrec.regex.RegexPrettyPrinter.charClassCharsToEscape", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#charClassCharsToEscape:Set[Char]", "kind" : "val"}, {"label" : "nonCharClassCharsToEscape", "tail" : ": Set[Char]", "member" : "ceedubs.irrec.regex.RegexPrettyPrinter.nonCharClassCharsToEscape", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#nonCharClassCharsToEscape:Set[Char]", "kind" : "val"}, {"label" : "kleenePrecedenceAlgebra", "tail" : "(): Algebra[[Î³$0$]CoattrF[KleeneF, A, Î³$0$], Int]", "member" : "ceedubs.irrec.regex.RegexPrettyPrinter.kleenePrecedenceAlgebra", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#kleenePrecedenceAlgebra[A]:higherkindness.droste.Algebra[[Î³$0$]higherkindness.droste.data.CoattrF[ceedubs.irrec.KleeneF,A,Î³$0$],Int]", "kind" : "def"}, {"label" : "precedence", "tail" : ": (KleeneF[_]) â‡’ Int", "member" : "ceedubs.irrec.regex.RegexPrettyPrinter.precedence", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#precedence:ceedubs.irrec.KleeneF[_]=>Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ceedubs.irrec.regex.RegexShrink", "shortDescription" : "", "object" : "ceedubs\/irrec\/regex\/RegexShrink$.html", "members_object" : [{"label" : "shrinkRange", "tail" : "(range: Range[A])(discreteA: Discrete[A], orderA: Order[A]): Stream[Range[A]]", "member" : "ceedubs.irrec.regex.RegexShrink.shrinkRange", "link" : "ceedubs\/irrec\/regex\/RegexShrink$.html#shrinkRange[A](range:cats.collections.Range[A])(implicitdiscreteA:cats.collections.Discrete[A],implicitorderA:cats.Order[A]):Stream[cats.collections.Range[A]]", "kind" : "def"}, {"label" : "shrinkDiet", "tail" : "(diet: Diet[A])(arg0: Discrete[A], arg1: Order[A]): Stream[Diet[A]]", "member" : "ceedubs.irrec.regex.RegexShrink.shrinkDiet", "link" : "ceedubs\/irrec\/regex\/RegexShrink$.html#shrinkDiet[A](diet:cats.collections.Diet[A])(implicitevidence$12:cats.collections.Discrete[A],implicitevidence$13:cats.Order[A]):Stream[cats.collections.Diet[A]]", "kind" : "def"}, {"label" : "shrinkForRegex", "tail" : "(arg0: Discrete[A], arg1: Order[A], arg2: Shrink[A]): Shrink[Regex[A]]", "member" : "ceedubs.irrec.regex.RegexShrink.shrinkForRegex", "link" : "ceedubs\/irrec\/regex\/RegexShrink$.html#shrinkForRegex[A](implicitevidence$9:cats.collections.Discrete[A],implicitevidence$10:cats.Order[A],implicitevidence$11:org.scalacheck.Shrink[A]):org.scalacheck.Shrink[ceedubs.irrec.regex.Regex[A]]", "kind" : "def"}, {"label" : "shrinkRegex", "tail" : "(arg0: Discrete[A], arg1: Order[A], arg2: Shrink[A]): (Regex[A]) â‡’ Stream[Regex[A]]", "member" : "ceedubs.irrec.regex.RegexShrink.shrinkRegex", "link" : "ceedubs\/irrec\/regex\/RegexShrink$.html#shrinkRegex[A](implicitevidence$6:cats.collections.Discrete[A],implicitevidence$7:cats.Order[A],implicitevidence$8:org.scalacheck.Shrink[A]):ceedubs.irrec.regex.Regex[A]=>Stream[ceedubs.irrec.regex.Regex[A]]", "kind" : "def"}, {"label" : "shrinkRegexCoattrF", "tail" : "(arg0: Discrete[A], arg1: Order[A], arg2: Shrink[A]): (CoattrF[KleeneF, Match[A], (Regex[A], Stream[Regex[A]])]) â‡’ Stream[Regex[A]]", "member" : "ceedubs.irrec.regex.RegexShrink.shrinkRegexCoattrF", "link" : "ceedubs\/irrec\/regex\/RegexShrink$.html#shrinkRegexCoattrF[A](implicitevidence$3:cats.collections.Discrete[A],implicitevidence$4:cats.Order[A],implicitevidence$5:org.scalacheck.Shrink[A]):higherkindness.droste.data.CoattrF[ceedubs.irrec.KleeneF,ceedubs.irrec.regex.Match[A],(ceedubs.irrec.regex.Regex[A],Stream[ceedubs.irrec.regex.Regex[A]])]=>Stream[ceedubs.irrec.regex.Regex[A]]", "kind" : "def"}, {"label" : "shrinkMatch", "tail" : "(arg0: Discrete[A], arg1: Order[A]): (Match[A]) â‡’ Stream[Match[A]]", "member" : "ceedubs.irrec.regex.RegexShrink.shrinkMatch", "link" : "ceedubs\/irrec\/regex\/RegexShrink$.html#shrinkMatch[A](implicitevidence$1:cats.collections.Discrete[A],implicitevidence$2:cats.Order[A]):ceedubs.irrec.regex.Match[A]=>Stream[ceedubs.irrec.regex.Match[A]]", "kind" : "def"}, {"label" : "shrinkKleeneF", "tail" : "(): (KleeneF[(Regex[A], Stream[Regex[A]])]) â‡’ Stream[Regex[A]]", "member" : "ceedubs.irrec.regex.RegexShrink.shrinkKleeneF", "link" : "ceedubs\/irrec\/regex\/RegexShrink$.html#shrinkKleeneF[A]:ceedubs.irrec.KleeneF[(ceedubs.irrec.regex.Regex[A],Stream[ceedubs.irrec.regex.Regex[A]])]=>Stream[ceedubs.irrec.regex.Regex[A]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ceedubs\/irrec\/regex\/RegexShrink$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ceedubs\/irrec\/regex\/RegexShrink$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ceedubs\/irrec\/regex\/RegexShrink$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ceedubs\/irrec\/regex\/RegexShrink$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ceedubs\/irrec\/regex\/RegexShrink$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ceedubs\/irrec\/regex\/RegexShrink$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ceedubs\/irrec\/regex\/RegexShrink$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/RegexShrink$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/RegexShrink$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/RegexShrink$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ceedubs\/irrec\/regex\/RegexShrink$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ceedubs\/irrec\/regex\/RegexShrink$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ceedubs\/irrec\/regex\/RegexShrink$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ceedubs\/irrec\/regex\/RegexShrink$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ceedubs\/irrec\/regex\/RegexShrink$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ceedubs\/irrec\/regex\/RegexShrink$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ceedubs\/irrec\/regex\/RegexShrink$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ceedubs\/irrec\/regex\/RegexShrink$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ceedubs\/irrec\/regex\/RegexShrink$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}]};